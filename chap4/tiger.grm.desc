76 shift/reduce conflicts

error:  state 20: shift/reduce conflict (shift NIL, reduce by rule 21)
error:  state 20: shift/reduce conflict (shift BREAK, reduce by rule 21)
error:  state 20: shift/reduce conflict (shift LET, reduce by rule 21)
error:  state 20: shift/reduce conflict (shift FOR, reduce by rule 21)
error:  state 20: shift/reduce conflict (shift WHILE, reduce by rule 21)
error:  state 20: shift/reduce conflict (shift IF, reduce by rule 21)
error:  state 20: shift/reduce conflict (shift RPAREN, reduce by rule 21)
error:  state 20: shift/reduce conflict (shift LPAREN, reduce by rule 21)
error:  state 20: shift/reduce conflict (shift STRING, reduce by rule 21)
error:  state 20: shift/reduce conflict (shift INT, reduce by rule 21)
error:  state 20: shift/reduce conflict (shift ID, reduce by rule 21)
error:  state 23: shift/reduce conflict (shift LBRACK, reduce by rule 69)
error:  state 23: shift/reduce conflict (shift LPAREN, reduce by rule 69)
error:  state 39: shift/reduce conflict (shift TYPE, reduce by rule 51)
error:  state 40: shift/reduce conflict (shift FUNCTION, reduce by rule 53)
error:  state 96: shift/reduce conflict (shift OR, reduce by rule 14)
error:  state 96: shift/reduce conflict (shift AND, reduce by rule 14)
error:  state 96: shift/reduce conflict (shift GE, reduce by rule 14)
error:  state 96: shift/reduce conflict (shift GT, reduce by rule 14)
error:  state 96: shift/reduce conflict (shift LE, reduce by rule 14)
error:  state 96: shift/reduce conflict (shift LT, reduce by rule 14)
error:  state 96: shift/reduce conflict (shift NEQ, reduce by rule 14)
error:  state 96: shift/reduce conflict (shift EQ, reduce by rule 14)
error:  state 96: shift/reduce conflict (shift DIVIDE, reduce by rule 14)
error:  state 96: shift/reduce conflict (shift TIMES, reduce by rule 14)
error:  state 96: shift/reduce conflict (shift MINUS, reduce by rule 14)
error:  state 96: shift/reduce conflict (shift PLUS, reduce by rule 14)
error:  state 97: shift/reduce conflict (shift ELSE, reduce by rule 47)
error:  state 97: shift/reduce conflict (shift OR, reduce by rule 47)
error:  state 97: shift/reduce conflict (shift AND, reduce by rule 47)
error:  state 97: shift/reduce conflict (shift GE, reduce by rule 47)
error:  state 97: shift/reduce conflict (shift GT, reduce by rule 47)
error:  state 97: shift/reduce conflict (shift LE, reduce by rule 47)
error:  state 97: shift/reduce conflict (shift LT, reduce by rule 47)
error:  state 97: shift/reduce conflict (shift NEQ, reduce by rule 47)
error:  state 97: shift/reduce conflict (shift EQ, reduce by rule 47)
error:  state 97: shift/reduce conflict (shift DIVIDE, reduce by rule 47)
error:  state 97: shift/reduce conflict (shift TIMES, reduce by rule 47)
error:  state 97: shift/reduce conflict (shift MINUS, reduce by rule 47)
error:  state 97: shift/reduce conflict (shift PLUS, reduce by rule 47)
error:  state 124: shift/reduce conflict (shift OR, reduce by rule 46)
error:  state 124: shift/reduce conflict (shift AND, reduce by rule 46)
error:  state 124: shift/reduce conflict (shift GE, reduce by rule 46)
error:  state 124: shift/reduce conflict (shift GT, reduce by rule 46)
error:  state 124: shift/reduce conflict (shift LE, reduce by rule 46)
error:  state 124: shift/reduce conflict (shift LT, reduce by rule 46)
error:  state 124: shift/reduce conflict (shift NEQ, reduce by rule 46)
error:  state 124: shift/reduce conflict (shift EQ, reduce by rule 46)
error:  state 124: shift/reduce conflict (shift DIVIDE, reduce by rule 46)
error:  state 124: shift/reduce conflict (shift TIMES, reduce by rule 46)
error:  state 124: shift/reduce conflict (shift MINUS, reduce by rule 46)
error:  state 124: shift/reduce conflict (shift PLUS, reduce by rule 46)
error:  state 126: shift/reduce conflict (shift OR, reduce by rule 44)
error:  state 126: shift/reduce conflict (shift AND, reduce by rule 44)
error:  state 126: shift/reduce conflict (shift GE, reduce by rule 44)
error:  state 126: shift/reduce conflict (shift GT, reduce by rule 44)
error:  state 126: shift/reduce conflict (shift LE, reduce by rule 44)
error:  state 126: shift/reduce conflict (shift LT, reduce by rule 44)
error:  state 126: shift/reduce conflict (shift NEQ, reduce by rule 44)
error:  state 126: shift/reduce conflict (shift EQ, reduce by rule 44)
error:  state 126: shift/reduce conflict (shift DIVIDE, reduce by rule 44)
error:  state 126: shift/reduce conflict (shift TIMES, reduce by rule 44)
error:  state 126: shift/reduce conflict (shift MINUS, reduce by rule 44)
error:  state 126: shift/reduce conflict (shift PLUS, reduce by rule 44)
error:  state 138: shift/reduce conflict (shift OR, reduce by rule 15)
error:  state 138: shift/reduce conflict (shift AND, reduce by rule 15)
error:  state 138: shift/reduce conflict (shift GE, reduce by rule 15)
error:  state 138: shift/reduce conflict (shift GT, reduce by rule 15)
error:  state 138: shift/reduce conflict (shift LE, reduce by rule 15)
error:  state 138: shift/reduce conflict (shift LT, reduce by rule 15)
error:  state 138: shift/reduce conflict (shift NEQ, reduce by rule 15)
error:  state 138: shift/reduce conflict (shift EQ, reduce by rule 15)
error:  state 138: shift/reduce conflict (shift DIVIDE, reduce by rule 15)
error:  state 138: shift/reduce conflict (shift TIMES, reduce by rule 15)
error:  state 138: shift/reduce conflict (shift MINUS, reduce by rule 15)
error:  state 138: shift/reduce conflict (shift PLUS, reduce by rule 15)

state 0:

	program : . exp 

	ID	shift 23
	INT	shift 22
	STRING	shift 21
	LPAREN	shift 20
	IF	shift 19
	WHILE	shift 18
	FOR	shift 17
	LET	shift 16
	BREAK	shift 15
	NIL	shift 14

	exp	goto 13
	program	goto 142
	lvalue	goto 12
	seqs	goto 11
	funcall	goto 10
	arthcomp	goto 9
	logicops	goto 8
	comrcomp	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	unitexp	goto 1

	.	error


state 1:

	exp : unitexp .  (reduce by rule 3)



	.	reduce by rule 3


state 2:

	exp : letexp .  (reduce by rule 19)



	.	reduce by rule 19


state 3:

	exp : ifthen .  (reduce by rule 13)



	.	reduce by rule 13


state 4:

	exp : assign .  (reduce by rule 12)



	.	reduce by rule 12


state 5:

	exp : arraycreate .  (reduce by rule 11)



	.	reduce by rule 11


state 6:

	exp : recordcreate .  (reduce by rule 10)



	.	reduce by rule 10


state 7:

	exp : comrcomp .  (reduce by rule 8)



	.	reduce by rule 8


state 8:

	exp : logicops .  (reduce by rule 9)



	.	reduce by rule 9


state 9:

	exp : arthcomp .  (reduce by rule 7)



	.	reduce by rule 7


state 10:

	exp : funcall .  (reduce by rule 6)



	.	reduce by rule 6


state 11:

	exp : seqs .  (reduce by rule 2)



	.	reduce by rule 2


state 12:

	exp : lvalue .  (reduce by rule 1)
	lvalue : lvalue . LBRACK exp RBRACK 
	lvalue : lvalue . DOT ID 
	assign : lvalue . ASSIGN exp 

	LBRACK	shift 26
	DOT	shift 25
	ASSIGN	shift 24


	.	reduce by rule 1


state 13:

	program : exp .  (reduce by rule 0)
	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 
	comrcomp : exp . EQ exp 
	comrcomp : exp . NEQ exp 
	comrcomp : exp . LT exp 
	comrcomp : exp . LE exp 
	comrcomp : exp . GT exp 
	comrcomp : exp . GE exp 

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27


	.	reduce by rule 0


state 14:

	exp : NIL .  (reduce by rule 18)



	.	reduce by rule 18


state 15:

	exp : BREAK .  (reduce by rule 17)



	.	reduce by rule 17


state 16:

	letexp : LET . decs IN expseqs END 

	FUNCTION	shift 48
	VAR	shift 47
	TYPE	shift 46

	decs	goto 45
	dec	goto 44
	tydec	goto 43
	vardec	goto 42
	fundec	goto 41
	fundeclist	goto 40
	typedeclist	goto 39

	.	reduce by rule 50


state 17:

	exp : FOR . ID ASSIGN exp TO exp DO exp 

	ID	shift 49


	.	error


state 18:

	exp : WHILE . exp DO exp 

	ID	shift 23
	INT	shift 22
	STRING	shift 21
	LPAREN	shift 20
	IF	shift 19
	WHILE	shift 18
	FOR	shift 17
	LET	shift 16
	BREAK	shift 15
	NIL	shift 14

	exp	goto 50
	lvalue	goto 12
	seqs	goto 11
	funcall	goto 10
	arthcomp	goto 9
	logicops	goto 8
	comrcomp	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	unitexp	goto 1

	.	error


state 19:

	ifthen : IF . exp THEN exp ELSE exp 
	ifthen : IF . exp THEN exp 

	ID	shift 23
	INT	shift 22
	STRING	shift 21
	LPAREN	shift 20
	IF	shift 19
	WHILE	shift 18
	FOR	shift 17
	LET	shift 16
	BREAK	shift 15
	NIL	shift 14

	exp	goto 51
	lvalue	goto 12
	seqs	goto 11
	funcall	goto 10
	arthcomp	goto 9
	logicops	goto 8
	comrcomp	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	unitexp	goto 1

	.	error

error:  state 20: shift/reduce conflict (shift NIL, reduce by rule 21)
error:  state 20: shift/reduce conflict (shift BREAK, reduce by rule 21)
error:  state 20: shift/reduce conflict (shift LET, reduce by rule 21)
error:  state 20: shift/reduce conflict (shift FOR, reduce by rule 21)
error:  state 20: shift/reduce conflict (shift WHILE, reduce by rule 21)
error:  state 20: shift/reduce conflict (shift IF, reduce by rule 21)
error:  state 20: shift/reduce conflict (shift RPAREN, reduce by rule 21)
error:  state 20: shift/reduce conflict (shift LPAREN, reduce by rule 21)
error:  state 20: shift/reduce conflict (shift STRING, reduce by rule 21)
error:  state 20: shift/reduce conflict (shift INT, reduce by rule 21)
error:  state 20: shift/reduce conflict (shift ID, reduce by rule 21)

state 20:

	exp : LPAREN . exp RPAREN 
	seqs : LPAREN . expseqs RPAREN 
	unitexp : LPAREN . RPAREN 

	ID	shift 23
	INT	shift 22
	STRING	shift 21
	LPAREN	shift 20
	RPAREN	shift 54
	IF	shift 19
	WHILE	shift 18
	FOR	shift 17
	LET	shift 16
	BREAK	shift 15
	NIL	shift 14

	exp	goto 53
	lvalue	goto 12
	seqs	goto 11
	expseqs	goto 52
	funcall	goto 10
	arthcomp	goto 9
	logicops	goto 8
	comrcomp	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	unitexp	goto 1

	.	error


state 21:

	exp : STRING .  (reduce by rule 5)



	.	reduce by rule 5


state 22:

	exp : INT .  (reduce by rule 4)



	.	reduce by rule 4

error:  state 23: shift/reduce conflict (shift LBRACK, reduce by rule 69)
error:  state 23: shift/reduce conflict (shift LPAREN, reduce by rule 69)

state 23:

	lvalue : ID .  (reduce by rule 69)
	lvalue : ID . LBRACK exp RBRACK 
	funcall : ID . LPAREN args RPAREN 
	recordcreate : ID . LBRACE recassign RBRACE 
	arraycreate : ID . LBRACK exp RBRACK OF exp 

	LPAREN	shift 57
	LBRACK	shift 56
	LBRACE	shift 55


	.	reduce by rule 69


state 24:

	assign : lvalue ASSIGN . exp 

	ID	shift 23
	INT	shift 22
	STRING	shift 21
	LPAREN	shift 20
	IF	shift 19
	WHILE	shift 18
	FOR	shift 17
	LET	shift 16
	BREAK	shift 15
	NIL	shift 14

	exp	goto 58
	lvalue	goto 12
	seqs	goto 11
	funcall	goto 10
	arthcomp	goto 9
	logicops	goto 8
	comrcomp	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	unitexp	goto 1

	.	error


state 25:

	lvalue : lvalue DOT . ID 

	ID	shift 59


	.	error


state 26:

	lvalue : lvalue LBRACK . exp RBRACK 

	ID	shift 23
	INT	shift 22
	STRING	shift 21
	LPAREN	shift 20
	IF	shift 19
	WHILE	shift 18
	FOR	shift 17
	LET	shift 16
	BREAK	shift 15
	NIL	shift 14

	exp	goto 60
	lvalue	goto 12
	seqs	goto 11
	funcall	goto 10
	arthcomp	goto 9
	logicops	goto 8
	comrcomp	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	unitexp	goto 1

	.	error


state 27:

	logicops : exp OR . exp 

	ID	shift 23
	INT	shift 22
	STRING	shift 21
	LPAREN	shift 20
	IF	shift 19
	WHILE	shift 18
	FOR	shift 17
	LET	shift 16
	BREAK	shift 15
	NIL	shift 14

	exp	goto 61
	lvalue	goto 12
	seqs	goto 11
	funcall	goto 10
	arthcomp	goto 9
	logicops	goto 8
	comrcomp	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	unitexp	goto 1

	.	error


state 28:

	logicops : exp AND . exp 

	ID	shift 23
	INT	shift 22
	STRING	shift 21
	LPAREN	shift 20
	IF	shift 19
	WHILE	shift 18
	FOR	shift 17
	LET	shift 16
	BREAK	shift 15
	NIL	shift 14

	exp	goto 62
	lvalue	goto 12
	seqs	goto 11
	funcall	goto 10
	arthcomp	goto 9
	logicops	goto 8
	comrcomp	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	unitexp	goto 1

	.	error


state 29:

	comrcomp : exp GE . exp 

	ID	shift 23
	INT	shift 22
	STRING	shift 21
	LPAREN	shift 20
	IF	shift 19
	WHILE	shift 18
	FOR	shift 17
	LET	shift 16
	BREAK	shift 15
	NIL	shift 14

	exp	goto 63
	lvalue	goto 12
	seqs	goto 11
	funcall	goto 10
	arthcomp	goto 9
	logicops	goto 8
	comrcomp	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	unitexp	goto 1

	.	error


state 30:

	comrcomp : exp GT . exp 

	ID	shift 23
	INT	shift 22
	STRING	shift 21
	LPAREN	shift 20
	IF	shift 19
	WHILE	shift 18
	FOR	shift 17
	LET	shift 16
	BREAK	shift 15
	NIL	shift 14

	exp	goto 64
	lvalue	goto 12
	seqs	goto 11
	funcall	goto 10
	arthcomp	goto 9
	logicops	goto 8
	comrcomp	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	unitexp	goto 1

	.	error


state 31:

	comrcomp : exp LE . exp 

	ID	shift 23
	INT	shift 22
	STRING	shift 21
	LPAREN	shift 20
	IF	shift 19
	WHILE	shift 18
	FOR	shift 17
	LET	shift 16
	BREAK	shift 15
	NIL	shift 14

	exp	goto 65
	lvalue	goto 12
	seqs	goto 11
	funcall	goto 10
	arthcomp	goto 9
	logicops	goto 8
	comrcomp	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	unitexp	goto 1

	.	error


state 32:

	comrcomp : exp LT . exp 

	ID	shift 23
	INT	shift 22
	STRING	shift 21
	LPAREN	shift 20
	IF	shift 19
	WHILE	shift 18
	FOR	shift 17
	LET	shift 16
	BREAK	shift 15
	NIL	shift 14

	exp	goto 66
	lvalue	goto 12
	seqs	goto 11
	funcall	goto 10
	arthcomp	goto 9
	logicops	goto 8
	comrcomp	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	unitexp	goto 1

	.	error


state 33:

	comrcomp : exp NEQ . exp 

	ID	shift 23
	INT	shift 22
	STRING	shift 21
	LPAREN	shift 20
	IF	shift 19
	WHILE	shift 18
	FOR	shift 17
	LET	shift 16
	BREAK	shift 15
	NIL	shift 14

	exp	goto 67
	lvalue	goto 12
	seqs	goto 11
	funcall	goto 10
	arthcomp	goto 9
	logicops	goto 8
	comrcomp	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	unitexp	goto 1

	.	error


state 34:

	comrcomp : exp EQ . exp 

	ID	shift 23
	INT	shift 22
	STRING	shift 21
	LPAREN	shift 20
	IF	shift 19
	WHILE	shift 18
	FOR	shift 17
	LET	shift 16
	BREAK	shift 15
	NIL	shift 14

	exp	goto 68
	lvalue	goto 12
	seqs	goto 11
	funcall	goto 10
	arthcomp	goto 9
	logicops	goto 8
	comrcomp	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	unitexp	goto 1

	.	error


state 35:

	arthcomp : exp DIVIDE . exp 

	ID	shift 23
	INT	shift 22
	STRING	shift 21
	LPAREN	shift 20
	IF	shift 19
	WHILE	shift 18
	FOR	shift 17
	LET	shift 16
	BREAK	shift 15
	NIL	shift 14

	exp	goto 69
	lvalue	goto 12
	seqs	goto 11
	funcall	goto 10
	arthcomp	goto 9
	logicops	goto 8
	comrcomp	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	unitexp	goto 1

	.	error


state 36:

	arthcomp : exp TIMES . exp 

	ID	shift 23
	INT	shift 22
	STRING	shift 21
	LPAREN	shift 20
	IF	shift 19
	WHILE	shift 18
	FOR	shift 17
	LET	shift 16
	BREAK	shift 15
	NIL	shift 14

	exp	goto 70
	lvalue	goto 12
	seqs	goto 11
	funcall	goto 10
	arthcomp	goto 9
	logicops	goto 8
	comrcomp	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	unitexp	goto 1

	.	error


state 37:

	arthcomp : exp MINUS . exp 

	ID	shift 23
	INT	shift 22
	STRING	shift 21
	LPAREN	shift 20
	IF	shift 19
	WHILE	shift 18
	FOR	shift 17
	LET	shift 16
	BREAK	shift 15
	NIL	shift 14

	exp	goto 71
	lvalue	goto 12
	seqs	goto 11
	funcall	goto 10
	arthcomp	goto 9
	logicops	goto 8
	comrcomp	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	unitexp	goto 1

	.	error


state 38:

	arthcomp : exp PLUS . exp 

	ID	shift 23
	INT	shift 22
	STRING	shift 21
	LPAREN	shift 20
	IF	shift 19
	WHILE	shift 18
	FOR	shift 17
	LET	shift 16
	BREAK	shift 15
	NIL	shift 14

	exp	goto 72
	lvalue	goto 12
	seqs	goto 11
	funcall	goto 10
	arthcomp	goto 9
	logicops	goto 8
	comrcomp	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	unitexp	goto 1

	.	error

error:  state 39: shift/reduce conflict (shift TYPE, reduce by rule 51)

state 39:

	dec : typedeclist .  (reduce by rule 51)
	typedeclist : typedeclist . tydec 

	TYPE	shift 46

	tydec	goto 73

	.	reduce by rule 51

error:  state 40: shift/reduce conflict (shift FUNCTION, reduce by rule 53)

state 40:

	dec : fundeclist .  (reduce by rule 53)
	fundeclist : fundeclist . fundec 

	FUNCTION	shift 48

	fundec	goto 74

	.	reduce by rule 53


state 41:

	fundeclist : fundec .  (reduce by rule 56)



	.	reduce by rule 56


state 42:

	dec : vardec .  (reduce by rule 52)



	.	reduce by rule 52


state 43:

	typedeclist : tydec .  (reduce by rule 54)



	.	reduce by rule 54


state 44:

	decs : dec . decs 

	FUNCTION	shift 48
	VAR	shift 47
	TYPE	shift 46

	decs	goto 75
	dec	goto 44
	tydec	goto 43
	vardec	goto 42
	fundec	goto 41
	fundeclist	goto 40
	typedeclist	goto 39

	.	reduce by rule 50


state 45:

	letexp : LET decs . IN expseqs END 

	IN	shift 76


	.	error


state 46:

	tydec : TYPE . ID EQ ty 

	ID	shift 77


	.	error


state 47:

	vardec : VAR . ID ASSIGN exp 
	vardec : VAR . ID COLON ID ASSIGN exp 

	ID	shift 78


	.	error


state 48:

	fundec : FUNCTION . ID LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp 

	ID	shift 79


	.	error


state 49:

	exp : FOR ID . ASSIGN exp TO exp DO exp 

	ASSIGN	shift 80


	.	error


state 50:

	exp : WHILE exp . DO exp 
	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 
	comrcomp : exp . EQ exp 
	comrcomp : exp . NEQ exp 
	comrcomp : exp . LT exp 
	comrcomp : exp . LE exp 
	comrcomp : exp . GT exp 
	comrcomp : exp . GE exp 

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27
	DO	shift 81


	.	error


state 51:

	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 
	comrcomp : exp . EQ exp 
	comrcomp : exp . NEQ exp 
	comrcomp : exp . LT exp 
	comrcomp : exp . LE exp 
	comrcomp : exp . GT exp 
	comrcomp : exp . GE exp 
	ifthen : IF exp . THEN exp ELSE exp 
	ifthen : IF exp . THEN exp 

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27
	THEN	shift 82


	.	error


state 52:

	seqs : LPAREN expseqs . RPAREN 
	expseqs : expseqs . exp SEMICOLON 
	expseqs : expseqs . exp 

	ID	shift 23
	INT	shift 22
	STRING	shift 21
	LPAREN	shift 20
	RPAREN	shift 84
	IF	shift 19
	WHILE	shift 18
	FOR	shift 17
	LET	shift 16
	BREAK	shift 15
	NIL	shift 14

	exp	goto 83
	lvalue	goto 12
	seqs	goto 11
	funcall	goto 10
	arthcomp	goto 9
	logicops	goto 8
	comrcomp	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	unitexp	goto 1

	.	error


state 53:

	exp : LPAREN exp . RPAREN 
	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 
	comrcomp : exp . EQ exp 
	comrcomp : exp . NEQ exp 
	comrcomp : exp . LT exp 
	comrcomp : exp . LE exp 
	comrcomp : exp . GT exp 
	comrcomp : exp . GE exp 

	RPAREN	shift 85
	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27


	.	error


state 54:

	unitexp : LPAREN RPAREN .  (reduce by rule 73)



	.	reduce by rule 73


state 55:

	recordcreate : ID LBRACE . recassign RBRACE 


	recassign	goto 86

	.	reduce by rule 41


state 56:

	lvalue : ID LBRACK . exp RBRACK 
	arraycreate : ID LBRACK . exp RBRACK OF exp 

	ID	shift 23
	INT	shift 22
	STRING	shift 21
	LPAREN	shift 20
	IF	shift 19
	WHILE	shift 18
	FOR	shift 17
	LET	shift 16
	BREAK	shift 15
	NIL	shift 14

	exp	goto 87
	lvalue	goto 12
	seqs	goto 11
	funcall	goto 10
	arthcomp	goto 9
	logicops	goto 8
	comrcomp	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	unitexp	goto 1

	.	error


state 57:

	funcall : ID LPAREN . args RPAREN 


	args	goto 88

	.	reduce by rule 27


state 58:

	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 
	comrcomp : exp . EQ exp 
	comrcomp : exp . NEQ exp 
	comrcomp : exp . LT exp 
	comrcomp : exp . LE exp 
	comrcomp : exp . GT exp 
	comrcomp : exp . GE exp 
	assign : lvalue ASSIGN exp .  (reduce by rule 45)

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27


	.	reduce by rule 45


state 59:

	lvalue : lvalue DOT ID .  (reduce by rule 72)



	.	reduce by rule 72


state 60:

	lvalue : lvalue LBRACK exp . RBRACK 
	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 
	comrcomp : exp . EQ exp 
	comrcomp : exp . NEQ exp 
	comrcomp : exp . LT exp 
	comrcomp : exp . LE exp 
	comrcomp : exp . GT exp 
	comrcomp : exp . GE exp 

	RBRACK	shift 89
	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27


	.	error


state 61:

	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 
	logicops : exp OR exp .  (reduce by rule 33)
	comrcomp : exp . EQ exp 
	comrcomp : exp . NEQ exp 
	comrcomp : exp . LT exp 
	comrcomp : exp . LE exp 
	comrcomp : exp . GT exp 
	comrcomp : exp . GE exp 

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29


	.	reduce by rule 33


state 62:

	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp AND exp .  (reduce by rule 32)
	logicops : exp . OR exp 
	comrcomp : exp . EQ exp 
	comrcomp : exp . NEQ exp 
	comrcomp : exp . LT exp 
	comrcomp : exp . LE exp 
	comrcomp : exp . GT exp 
	comrcomp : exp . GE exp 

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29


	.	reduce by rule 32


state 63:

	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 
	comrcomp : exp . EQ exp 
	comrcomp : exp . NEQ exp 
	comrcomp : exp . LT exp 
	comrcomp : exp . LE exp 
	comrcomp : exp . GT exp 
	comrcomp : exp . GE exp 
	comrcomp : exp GE exp .  (reduce by rule 39)

	EOF	reduce by rule 39
	ID	reduce by rule 39
	INT	reduce by rule 39
	STRING	reduce by rule 39
	COMMA	reduce by rule 39
	SEMICOLON	reduce by rule 39
	LPAREN	reduce by rule 39
	RPAREN	reduce by rule 39
	RBRACK	reduce by rule 39
	RBRACE	reduce by rule 39
	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	AND	reduce by rule 39
	OR	reduce by rule 39
	IF	reduce by rule 39
	THEN	reduce by rule 39
	ELSE	reduce by rule 39
	WHILE	reduce by rule 39
	FOR	reduce by rule 39
	TO	reduce by rule 39
	DO	reduce by rule 39
	LET	reduce by rule 39
	IN	reduce by rule 39
	END	reduce by rule 39
	BREAK	reduce by rule 39
	NIL	reduce by rule 39
	FUNCTION	reduce by rule 39
	VAR	reduce by rule 39
	TYPE	reduce by rule 39


	.	error


state 64:

	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 
	comrcomp : exp . EQ exp 
	comrcomp : exp . NEQ exp 
	comrcomp : exp . LT exp 
	comrcomp : exp . LE exp 
	comrcomp : exp . GT exp 
	comrcomp : exp GT exp .  (reduce by rule 38)
	comrcomp : exp . GE exp 

	EOF	reduce by rule 38
	ID	reduce by rule 38
	INT	reduce by rule 38
	STRING	reduce by rule 38
	COMMA	reduce by rule 38
	SEMICOLON	reduce by rule 38
	LPAREN	reduce by rule 38
	RPAREN	reduce by rule 38
	RBRACK	reduce by rule 38
	RBRACE	reduce by rule 38
	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	AND	reduce by rule 38
	OR	reduce by rule 38
	IF	reduce by rule 38
	THEN	reduce by rule 38
	ELSE	reduce by rule 38
	WHILE	reduce by rule 38
	FOR	reduce by rule 38
	TO	reduce by rule 38
	DO	reduce by rule 38
	LET	reduce by rule 38
	IN	reduce by rule 38
	END	reduce by rule 38
	BREAK	reduce by rule 38
	NIL	reduce by rule 38
	FUNCTION	reduce by rule 38
	VAR	reduce by rule 38
	TYPE	reduce by rule 38


	.	error


state 65:

	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 
	comrcomp : exp . EQ exp 
	comrcomp : exp . NEQ exp 
	comrcomp : exp . LT exp 
	comrcomp : exp . LE exp 
	comrcomp : exp LE exp .  (reduce by rule 37)
	comrcomp : exp . GT exp 
	comrcomp : exp . GE exp 

	EOF	reduce by rule 37
	ID	reduce by rule 37
	INT	reduce by rule 37
	STRING	reduce by rule 37
	COMMA	reduce by rule 37
	SEMICOLON	reduce by rule 37
	LPAREN	reduce by rule 37
	RPAREN	reduce by rule 37
	RBRACK	reduce by rule 37
	RBRACE	reduce by rule 37
	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	AND	reduce by rule 37
	OR	reduce by rule 37
	IF	reduce by rule 37
	THEN	reduce by rule 37
	ELSE	reduce by rule 37
	WHILE	reduce by rule 37
	FOR	reduce by rule 37
	TO	reduce by rule 37
	DO	reduce by rule 37
	LET	reduce by rule 37
	IN	reduce by rule 37
	END	reduce by rule 37
	BREAK	reduce by rule 37
	NIL	reduce by rule 37
	FUNCTION	reduce by rule 37
	VAR	reduce by rule 37
	TYPE	reduce by rule 37


	.	error


state 66:

	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 
	comrcomp : exp . EQ exp 
	comrcomp : exp . NEQ exp 
	comrcomp : exp . LT exp 
	comrcomp : exp LT exp .  (reduce by rule 36)
	comrcomp : exp . LE exp 
	comrcomp : exp . GT exp 
	comrcomp : exp . GE exp 

	EOF	reduce by rule 36
	ID	reduce by rule 36
	INT	reduce by rule 36
	STRING	reduce by rule 36
	COMMA	reduce by rule 36
	SEMICOLON	reduce by rule 36
	LPAREN	reduce by rule 36
	RPAREN	reduce by rule 36
	RBRACK	reduce by rule 36
	RBRACE	reduce by rule 36
	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	AND	reduce by rule 36
	OR	reduce by rule 36
	IF	reduce by rule 36
	THEN	reduce by rule 36
	ELSE	reduce by rule 36
	WHILE	reduce by rule 36
	FOR	reduce by rule 36
	TO	reduce by rule 36
	DO	reduce by rule 36
	LET	reduce by rule 36
	IN	reduce by rule 36
	END	reduce by rule 36
	BREAK	reduce by rule 36
	NIL	reduce by rule 36
	FUNCTION	reduce by rule 36
	VAR	reduce by rule 36
	TYPE	reduce by rule 36


	.	error


state 67:

	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 
	comrcomp : exp . EQ exp 
	comrcomp : exp . NEQ exp 
	comrcomp : exp NEQ exp .  (reduce by rule 35)
	comrcomp : exp . LT exp 
	comrcomp : exp . LE exp 
	comrcomp : exp . GT exp 
	comrcomp : exp . GE exp 

	EOF	reduce by rule 35
	ID	reduce by rule 35
	INT	reduce by rule 35
	STRING	reduce by rule 35
	COMMA	reduce by rule 35
	SEMICOLON	reduce by rule 35
	LPAREN	reduce by rule 35
	RPAREN	reduce by rule 35
	RBRACK	reduce by rule 35
	RBRACE	reduce by rule 35
	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	AND	reduce by rule 35
	OR	reduce by rule 35
	IF	reduce by rule 35
	THEN	reduce by rule 35
	ELSE	reduce by rule 35
	WHILE	reduce by rule 35
	FOR	reduce by rule 35
	TO	reduce by rule 35
	DO	reduce by rule 35
	LET	reduce by rule 35
	IN	reduce by rule 35
	END	reduce by rule 35
	BREAK	reduce by rule 35
	NIL	reduce by rule 35
	FUNCTION	reduce by rule 35
	VAR	reduce by rule 35
	TYPE	reduce by rule 35


	.	error


state 68:

	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 
	comrcomp : exp . EQ exp 
	comrcomp : exp EQ exp .  (reduce by rule 34)
	comrcomp : exp . NEQ exp 
	comrcomp : exp . LT exp 
	comrcomp : exp . LE exp 
	comrcomp : exp . GT exp 
	comrcomp : exp . GE exp 

	EOF	reduce by rule 34
	ID	reduce by rule 34
	INT	reduce by rule 34
	STRING	reduce by rule 34
	COMMA	reduce by rule 34
	SEMICOLON	reduce by rule 34
	LPAREN	reduce by rule 34
	RPAREN	reduce by rule 34
	RBRACK	reduce by rule 34
	RBRACE	reduce by rule 34
	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	AND	reduce by rule 34
	OR	reduce by rule 34
	IF	reduce by rule 34
	THEN	reduce by rule 34
	ELSE	reduce by rule 34
	WHILE	reduce by rule 34
	FOR	reduce by rule 34
	TO	reduce by rule 34
	DO	reduce by rule 34
	LET	reduce by rule 34
	IN	reduce by rule 34
	END	reduce by rule 34
	BREAK	reduce by rule 34
	NIL	reduce by rule 34
	FUNCTION	reduce by rule 34
	VAR	reduce by rule 34
	TYPE	reduce by rule 34


	.	error


state 69:

	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	arthcomp : exp DIVIDE exp .  (reduce by rule 31)
	logicops : exp . AND exp 
	logicops : exp . OR exp 
	comrcomp : exp . EQ exp 
	comrcomp : exp . NEQ exp 
	comrcomp : exp . LT exp 
	comrcomp : exp . LE exp 
	comrcomp : exp . GT exp 
	comrcomp : exp . GE exp 



	.	reduce by rule 31


state 70:

	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp TIMES exp .  (reduce by rule 30)
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 
	comrcomp : exp . EQ exp 
	comrcomp : exp . NEQ exp 
	comrcomp : exp . LT exp 
	comrcomp : exp . LE exp 
	comrcomp : exp . GT exp 
	comrcomp : exp . GE exp 



	.	reduce by rule 30


state 71:

	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp MINUS exp .  (reduce by rule 29)
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 
	comrcomp : exp . EQ exp 
	comrcomp : exp . NEQ exp 
	comrcomp : exp . LT exp 
	comrcomp : exp . LE exp 
	comrcomp : exp . GT exp 
	comrcomp : exp . GE exp 

	TIMES	shift 36
	DIVIDE	shift 35


	.	reduce by rule 29


state 72:

	arthcomp : exp . PLUS exp 
	arthcomp : exp PLUS exp .  (reduce by rule 28)
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 
	comrcomp : exp . EQ exp 
	comrcomp : exp . NEQ exp 
	comrcomp : exp . LT exp 
	comrcomp : exp . LE exp 
	comrcomp : exp . GT exp 
	comrcomp : exp . GE exp 

	TIMES	shift 36
	DIVIDE	shift 35


	.	reduce by rule 28


state 73:

	typedeclist : typedeclist tydec .  (reduce by rule 55)



	.	reduce by rule 55


state 74:

	fundeclist : fundeclist fundec .  (reduce by rule 57)



	.	reduce by rule 57


state 75:

	decs : dec decs .  (reduce by rule 49)



	.	reduce by rule 49


state 76:

	letexp : LET decs IN . expseqs END 


	expseqs	goto 90

	.	reduce by rule 21


state 77:

	tydec : TYPE ID . EQ ty 

	EQ	shift 91


	.	error


state 78:

	vardec : VAR ID . ASSIGN exp 
	vardec : VAR ID . COLON ID ASSIGN exp 

	COLON	shift 93
	ASSIGN	shift 92


	.	error


state 79:

	fundec : FUNCTION ID . LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp 

	LPAREN	shift 94


	.	error


state 80:

	exp : FOR ID ASSIGN . exp TO exp DO exp 

	ID	shift 23
	INT	shift 22
	STRING	shift 21
	LPAREN	shift 20
	IF	shift 19
	WHILE	shift 18
	FOR	shift 17
	LET	shift 16
	BREAK	shift 15
	NIL	shift 14

	exp	goto 95
	lvalue	goto 12
	seqs	goto 11
	funcall	goto 10
	arthcomp	goto 9
	logicops	goto 8
	comrcomp	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	unitexp	goto 1

	.	error


state 81:

	exp : WHILE exp DO . exp 

	ID	shift 23
	INT	shift 22
	STRING	shift 21
	LPAREN	shift 20
	IF	shift 19
	WHILE	shift 18
	FOR	shift 17
	LET	shift 16
	BREAK	shift 15
	NIL	shift 14

	exp	goto 96
	lvalue	goto 12
	seqs	goto 11
	funcall	goto 10
	arthcomp	goto 9
	logicops	goto 8
	comrcomp	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	unitexp	goto 1

	.	error


state 82:

	ifthen : IF exp THEN . exp ELSE exp 
	ifthen : IF exp THEN . exp 

	ID	shift 23
	INT	shift 22
	STRING	shift 21
	LPAREN	shift 20
	IF	shift 19
	WHILE	shift 18
	FOR	shift 17
	LET	shift 16
	BREAK	shift 15
	NIL	shift 14

	exp	goto 97
	lvalue	goto 12
	seqs	goto 11
	funcall	goto 10
	arthcomp	goto 9
	logicops	goto 8
	comrcomp	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	unitexp	goto 1

	.	error


state 83:

	expseqs : expseqs exp . SEMICOLON 
	expseqs : expseqs exp .  (reduce by rule 23)
	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 
	comrcomp : exp . EQ exp 
	comrcomp : exp . NEQ exp 
	comrcomp : exp . LT exp 
	comrcomp : exp . LE exp 
	comrcomp : exp . GT exp 
	comrcomp : exp . GE exp 

	SEMICOLON	shift 98
	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27


	.	reduce by rule 23


state 84:

	seqs : LPAREN expseqs RPAREN .  (reduce by rule 20)



	.	reduce by rule 20


state 85:

	exp : LPAREN exp RPAREN .  (reduce by rule 16)



	.	reduce by rule 16


state 86:

	recordcreate : ID LBRACE recassign . RBRACE 
	recassign : recassign . ID EQ exp 
	recassign : recassign . ID EQ exp COMMA 

	ID	shift 100
	RBRACE	shift 99


	.	error


state 87:

	lvalue : ID LBRACK exp . RBRACK 
	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 
	comrcomp : exp . EQ exp 
	comrcomp : exp . NEQ exp 
	comrcomp : exp . LT exp 
	comrcomp : exp . LE exp 
	comrcomp : exp . GT exp 
	comrcomp : exp . GE exp 
	arraycreate : ID LBRACK exp . RBRACK OF exp 

	RBRACK	shift 101
	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27


	.	error


state 88:

	funcall : ID LPAREN args . RPAREN 
	args : args . exp COMMA 
	args : args . exp 

	ID	shift 23
	INT	shift 22
	STRING	shift 21
	LPAREN	shift 20
	RPAREN	shift 103
	IF	shift 19
	WHILE	shift 18
	FOR	shift 17
	LET	shift 16
	BREAK	shift 15
	NIL	shift 14

	exp	goto 102
	lvalue	goto 12
	seqs	goto 11
	funcall	goto 10
	arthcomp	goto 9
	logicops	goto 8
	comrcomp	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	unitexp	goto 1

	.	error


state 89:

	lvalue : lvalue LBRACK exp RBRACK .  (reduce by rule 70)



	.	reduce by rule 70


state 90:

	expseqs : expseqs . exp SEMICOLON 
	expseqs : expseqs . exp 
	letexp : LET decs IN expseqs . END 

	ID	shift 23
	INT	shift 22
	STRING	shift 21
	LPAREN	shift 20
	IF	shift 19
	WHILE	shift 18
	FOR	shift 17
	LET	shift 16
	END	shift 104
	BREAK	shift 15
	NIL	shift 14

	exp	goto 83
	lvalue	goto 12
	seqs	goto 11
	funcall	goto 10
	arthcomp	goto 9
	logicops	goto 8
	comrcomp	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	unitexp	goto 1

	.	error


state 91:

	tydec : TYPE ID EQ . ty 

	ID	shift 108
	LBRACE	shift 107
	ARRAY	shift 106

	ty	goto 105

	.	error


state 92:

	vardec : VAR ID ASSIGN . exp 

	ID	shift 23
	INT	shift 22
	STRING	shift 21
	LPAREN	shift 20
	IF	shift 19
	WHILE	shift 18
	FOR	shift 17
	LET	shift 16
	BREAK	shift 15
	NIL	shift 14

	exp	goto 109
	lvalue	goto 12
	seqs	goto 11
	funcall	goto 10
	arthcomp	goto 9
	logicops	goto 8
	comrcomp	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	unitexp	goto 1

	.	error


state 93:

	vardec : VAR ID COLON . ID ASSIGN exp 

	ID	shift 110


	.	error


state 94:

	fundec : FUNCTION ID LPAREN . tyfields RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp 

	ID	shift 112

	tyfields	goto 111

	.	reduce by rule 62


state 95:

	exp : FOR ID ASSIGN exp . TO exp DO exp 
	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 
	comrcomp : exp . EQ exp 
	comrcomp : exp . NEQ exp 
	comrcomp : exp . LT exp 
	comrcomp : exp . LE exp 
	comrcomp : exp . GT exp 
	comrcomp : exp . GE exp 

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27
	TO	shift 113


	.	error

error:  state 96: shift/reduce conflict (shift OR, reduce by rule 14)
error:  state 96: shift/reduce conflict (shift AND, reduce by rule 14)
error:  state 96: shift/reduce conflict (shift GE, reduce by rule 14)
error:  state 96: shift/reduce conflict (shift GT, reduce by rule 14)
error:  state 96: shift/reduce conflict (shift LE, reduce by rule 14)
error:  state 96: shift/reduce conflict (shift LT, reduce by rule 14)
error:  state 96: shift/reduce conflict (shift NEQ, reduce by rule 14)
error:  state 96: shift/reduce conflict (shift EQ, reduce by rule 14)
error:  state 96: shift/reduce conflict (shift DIVIDE, reduce by rule 14)
error:  state 96: shift/reduce conflict (shift TIMES, reduce by rule 14)
error:  state 96: shift/reduce conflict (shift MINUS, reduce by rule 14)
error:  state 96: shift/reduce conflict (shift PLUS, reduce by rule 14)

state 96:

	exp : WHILE exp DO exp .  (reduce by rule 14)
	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 
	comrcomp : exp . EQ exp 
	comrcomp : exp . NEQ exp 
	comrcomp : exp . LT exp 
	comrcomp : exp . LE exp 
	comrcomp : exp . GT exp 
	comrcomp : exp . GE exp 

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27


	.	reduce by rule 14

error:  state 97: shift/reduce conflict (shift ELSE, reduce by rule 47)
error:  state 97: shift/reduce conflict (shift OR, reduce by rule 47)
error:  state 97: shift/reduce conflict (shift AND, reduce by rule 47)
error:  state 97: shift/reduce conflict (shift GE, reduce by rule 47)
error:  state 97: shift/reduce conflict (shift GT, reduce by rule 47)
error:  state 97: shift/reduce conflict (shift LE, reduce by rule 47)
error:  state 97: shift/reduce conflict (shift LT, reduce by rule 47)
error:  state 97: shift/reduce conflict (shift NEQ, reduce by rule 47)
error:  state 97: shift/reduce conflict (shift EQ, reduce by rule 47)
error:  state 97: shift/reduce conflict (shift DIVIDE, reduce by rule 47)
error:  state 97: shift/reduce conflict (shift TIMES, reduce by rule 47)
error:  state 97: shift/reduce conflict (shift MINUS, reduce by rule 47)
error:  state 97: shift/reduce conflict (shift PLUS, reduce by rule 47)

state 97:

	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 
	comrcomp : exp . EQ exp 
	comrcomp : exp . NEQ exp 
	comrcomp : exp . LT exp 
	comrcomp : exp . LE exp 
	comrcomp : exp . GT exp 
	comrcomp : exp . GE exp 
	ifthen : IF exp THEN exp . ELSE exp 
	ifthen : IF exp THEN exp .  (reduce by rule 47)

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27
	ELSE	shift 114


	.	reduce by rule 47


state 98:

	expseqs : expseqs exp SEMICOLON .  (reduce by rule 22)



	.	reduce by rule 22


state 99:

	recordcreate : ID LBRACE recassign RBRACE .  (reduce by rule 40)



	.	reduce by rule 40


state 100:

	recassign : recassign ID . EQ exp 
	recassign : recassign ID . EQ exp COMMA 

	EQ	shift 115


	.	error


state 101:

	lvalue : ID LBRACK exp RBRACK .  (reduce by rule 71)
	arraycreate : ID LBRACK exp RBRACK . OF exp 

	OF	shift 116


	.	reduce by rule 71


state 102:

	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 
	comrcomp : exp . EQ exp 
	comrcomp : exp . NEQ exp 
	comrcomp : exp . LT exp 
	comrcomp : exp . LE exp 
	comrcomp : exp . GT exp 
	comrcomp : exp . GE exp 
	args : args exp . COMMA 
	args : args exp .  (reduce by rule 26)

	COMMA	shift 117
	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27


	.	reduce by rule 26


state 103:

	funcall : ID LPAREN args RPAREN .  (reduce by rule 24)



	.	reduce by rule 24


state 104:

	letexp : LET decs IN expseqs END .  (reduce by rule 48)



	.	reduce by rule 48


state 105:

	tydec : TYPE ID EQ ty .  (reduce by rule 58)



	.	reduce by rule 58


state 106:

	ty : ARRAY . OF ID 

	OF	shift 118


	.	error


state 107:

	ty : LBRACE . tyfields RBRACE 

	ID	shift 112

	tyfields	goto 119

	.	reduce by rule 62


state 108:

	ty : ID .  (reduce by rule 59)



	.	reduce by rule 59


state 109:

	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 
	comrcomp : exp . EQ exp 
	comrcomp : exp . NEQ exp 
	comrcomp : exp . LT exp 
	comrcomp : exp . LE exp 
	comrcomp : exp . GT exp 
	comrcomp : exp . GE exp 
	vardec : VAR ID ASSIGN exp .  (reduce by rule 65)

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27


	.	reduce by rule 65


state 110:

	vardec : VAR ID COLON ID . ASSIGN exp 

	ASSIGN	shift 120


	.	error


state 111:

	fundec : FUNCTION ID LPAREN tyfields . RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp 

	RPAREN	shift 121


	.	error


state 112:

	tyfields : ID . COLON ID 
	tyfields : ID . COLON ID COMMA tyfields 

	COLON	shift 122


	.	error


state 113:

	exp : FOR ID ASSIGN exp TO . exp DO exp 

	ID	shift 23
	INT	shift 22
	STRING	shift 21
	LPAREN	shift 20
	IF	shift 19
	WHILE	shift 18
	FOR	shift 17
	LET	shift 16
	BREAK	shift 15
	NIL	shift 14

	exp	goto 123
	lvalue	goto 12
	seqs	goto 11
	funcall	goto 10
	arthcomp	goto 9
	logicops	goto 8
	comrcomp	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	unitexp	goto 1

	.	error


state 114:

	ifthen : IF exp THEN exp ELSE . exp 

	ID	shift 23
	INT	shift 22
	STRING	shift 21
	LPAREN	shift 20
	IF	shift 19
	WHILE	shift 18
	FOR	shift 17
	LET	shift 16
	BREAK	shift 15
	NIL	shift 14

	exp	goto 124
	lvalue	goto 12
	seqs	goto 11
	funcall	goto 10
	arthcomp	goto 9
	logicops	goto 8
	comrcomp	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	unitexp	goto 1

	.	error


state 115:

	recassign : recassign ID EQ . exp 
	recassign : recassign ID EQ . exp COMMA 

	ID	shift 23
	INT	shift 22
	STRING	shift 21
	LPAREN	shift 20
	IF	shift 19
	WHILE	shift 18
	FOR	shift 17
	LET	shift 16
	BREAK	shift 15
	NIL	shift 14

	exp	goto 125
	lvalue	goto 12
	seqs	goto 11
	funcall	goto 10
	arthcomp	goto 9
	logicops	goto 8
	comrcomp	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	unitexp	goto 1

	.	error


state 116:

	arraycreate : ID LBRACK exp RBRACK OF . exp 

	ID	shift 23
	INT	shift 22
	STRING	shift 21
	LPAREN	shift 20
	IF	shift 19
	WHILE	shift 18
	FOR	shift 17
	LET	shift 16
	BREAK	shift 15
	NIL	shift 14

	exp	goto 126
	lvalue	goto 12
	seqs	goto 11
	funcall	goto 10
	arthcomp	goto 9
	logicops	goto 8
	comrcomp	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	unitexp	goto 1

	.	error


state 117:

	args : args exp COMMA .  (reduce by rule 25)



	.	reduce by rule 25


state 118:

	ty : ARRAY OF . ID 

	ID	shift 127


	.	error


state 119:

	ty : LBRACE tyfields . RBRACE 

	RBRACE	shift 128


	.	error


state 120:

	vardec : VAR ID COLON ID ASSIGN . exp 

	ID	shift 23
	INT	shift 22
	STRING	shift 21
	LPAREN	shift 20
	IF	shift 19
	WHILE	shift 18
	FOR	shift 17
	LET	shift 16
	BREAK	shift 15
	NIL	shift 14

	exp	goto 129
	lvalue	goto 12
	seqs	goto 11
	funcall	goto 10
	arthcomp	goto 9
	logicops	goto 8
	comrcomp	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	unitexp	goto 1

	.	error


state 121:

	fundec : FUNCTION ID LPAREN tyfields RPAREN . EQ exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp 

	COLON	shift 131
	EQ	shift 130


	.	error


state 122:

	tyfields : ID COLON . ID 
	tyfields : ID COLON . ID COMMA tyfields 

	ID	shift 132


	.	error


state 123:

	exp : FOR ID ASSIGN exp TO exp . DO exp 
	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 
	comrcomp : exp . EQ exp 
	comrcomp : exp . NEQ exp 
	comrcomp : exp . LT exp 
	comrcomp : exp . LE exp 
	comrcomp : exp . GT exp 
	comrcomp : exp . GE exp 

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27
	DO	shift 133


	.	error

error:  state 124: shift/reduce conflict (shift OR, reduce by rule 46)
error:  state 124: shift/reduce conflict (shift AND, reduce by rule 46)
error:  state 124: shift/reduce conflict (shift GE, reduce by rule 46)
error:  state 124: shift/reduce conflict (shift GT, reduce by rule 46)
error:  state 124: shift/reduce conflict (shift LE, reduce by rule 46)
error:  state 124: shift/reduce conflict (shift LT, reduce by rule 46)
error:  state 124: shift/reduce conflict (shift NEQ, reduce by rule 46)
error:  state 124: shift/reduce conflict (shift EQ, reduce by rule 46)
error:  state 124: shift/reduce conflict (shift DIVIDE, reduce by rule 46)
error:  state 124: shift/reduce conflict (shift TIMES, reduce by rule 46)
error:  state 124: shift/reduce conflict (shift MINUS, reduce by rule 46)
error:  state 124: shift/reduce conflict (shift PLUS, reduce by rule 46)

state 124:

	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 
	comrcomp : exp . EQ exp 
	comrcomp : exp . NEQ exp 
	comrcomp : exp . LT exp 
	comrcomp : exp . LE exp 
	comrcomp : exp . GT exp 
	comrcomp : exp . GE exp 
	ifthen : IF exp THEN exp ELSE exp .  (reduce by rule 46)

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27


	.	reduce by rule 46


state 125:

	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 
	comrcomp : exp . EQ exp 
	comrcomp : exp . NEQ exp 
	comrcomp : exp . LT exp 
	comrcomp : exp . LE exp 
	comrcomp : exp . GT exp 
	comrcomp : exp . GE exp 
	recassign : recassign ID EQ exp .  (reduce by rule 42)
	recassign : recassign ID EQ exp . COMMA 

	COMMA	shift 134
	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27


	.	reduce by rule 42

error:  state 126: shift/reduce conflict (shift OR, reduce by rule 44)
error:  state 126: shift/reduce conflict (shift AND, reduce by rule 44)
error:  state 126: shift/reduce conflict (shift GE, reduce by rule 44)
error:  state 126: shift/reduce conflict (shift GT, reduce by rule 44)
error:  state 126: shift/reduce conflict (shift LE, reduce by rule 44)
error:  state 126: shift/reduce conflict (shift LT, reduce by rule 44)
error:  state 126: shift/reduce conflict (shift NEQ, reduce by rule 44)
error:  state 126: shift/reduce conflict (shift EQ, reduce by rule 44)
error:  state 126: shift/reduce conflict (shift DIVIDE, reduce by rule 44)
error:  state 126: shift/reduce conflict (shift TIMES, reduce by rule 44)
error:  state 126: shift/reduce conflict (shift MINUS, reduce by rule 44)
error:  state 126: shift/reduce conflict (shift PLUS, reduce by rule 44)

state 126:

	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 
	comrcomp : exp . EQ exp 
	comrcomp : exp . NEQ exp 
	comrcomp : exp . LT exp 
	comrcomp : exp . LE exp 
	comrcomp : exp . GT exp 
	comrcomp : exp . GE exp 
	arraycreate : ID LBRACK exp RBRACK OF exp .  (reduce by rule 44)

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27


	.	reduce by rule 44


state 127:

	ty : ARRAY OF ID .  (reduce by rule 61)



	.	reduce by rule 61


state 128:

	ty : LBRACE tyfields RBRACE .  (reduce by rule 60)



	.	reduce by rule 60


state 129:

	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 
	comrcomp : exp . EQ exp 
	comrcomp : exp . NEQ exp 
	comrcomp : exp . LT exp 
	comrcomp : exp . LE exp 
	comrcomp : exp . GT exp 
	comrcomp : exp . GE exp 
	vardec : VAR ID COLON ID ASSIGN exp .  (reduce by rule 66)

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27


	.	reduce by rule 66


state 130:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ . exp 

	ID	shift 23
	INT	shift 22
	STRING	shift 21
	LPAREN	shift 20
	IF	shift 19
	WHILE	shift 18
	FOR	shift 17
	LET	shift 16
	BREAK	shift 15
	NIL	shift 14

	exp	goto 135
	lvalue	goto 12
	seqs	goto 11
	funcall	goto 10
	arthcomp	goto 9
	logicops	goto 8
	comrcomp	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	unitexp	goto 1

	.	error


state 131:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp 

	ID	shift 136


	.	error


state 132:

	tyfields : ID COLON ID .  (reduce by rule 63)
	tyfields : ID COLON ID . COMMA tyfields 

	COMMA	shift 137


	.	reduce by rule 63


state 133:

	exp : FOR ID ASSIGN exp TO exp DO . exp 

	ID	shift 23
	INT	shift 22
	STRING	shift 21
	LPAREN	shift 20
	IF	shift 19
	WHILE	shift 18
	FOR	shift 17
	LET	shift 16
	BREAK	shift 15
	NIL	shift 14

	exp	goto 138
	lvalue	goto 12
	seqs	goto 11
	funcall	goto 10
	arthcomp	goto 9
	logicops	goto 8
	comrcomp	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	unitexp	goto 1

	.	error


state 134:

	recassign : recassign ID EQ exp COMMA .  (reduce by rule 43)



	.	reduce by rule 43


state 135:

	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 
	comrcomp : exp . EQ exp 
	comrcomp : exp . NEQ exp 
	comrcomp : exp . LT exp 
	comrcomp : exp . LE exp 
	comrcomp : exp . GT exp 
	comrcomp : exp . GE exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ exp .  (reduce by rule 67)

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27


	.	reduce by rule 67


state 136:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp 

	EQ	shift 139


	.	error


state 137:

	tyfields : ID COLON ID COMMA . tyfields 

	ID	shift 112

	tyfields	goto 140

	.	reduce by rule 62

error:  state 138: shift/reduce conflict (shift OR, reduce by rule 15)
error:  state 138: shift/reduce conflict (shift AND, reduce by rule 15)
error:  state 138: shift/reduce conflict (shift GE, reduce by rule 15)
error:  state 138: shift/reduce conflict (shift GT, reduce by rule 15)
error:  state 138: shift/reduce conflict (shift LE, reduce by rule 15)
error:  state 138: shift/reduce conflict (shift LT, reduce by rule 15)
error:  state 138: shift/reduce conflict (shift NEQ, reduce by rule 15)
error:  state 138: shift/reduce conflict (shift EQ, reduce by rule 15)
error:  state 138: shift/reduce conflict (shift DIVIDE, reduce by rule 15)
error:  state 138: shift/reduce conflict (shift TIMES, reduce by rule 15)
error:  state 138: shift/reduce conflict (shift MINUS, reduce by rule 15)
error:  state 138: shift/reduce conflict (shift PLUS, reduce by rule 15)

state 138:

	exp : FOR ID ASSIGN exp TO exp DO exp .  (reduce by rule 15)
	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 
	comrcomp : exp . EQ exp 
	comrcomp : exp . NEQ exp 
	comrcomp : exp . LT exp 
	comrcomp : exp . LE exp 
	comrcomp : exp . GT exp 
	comrcomp : exp . GE exp 

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27


	.	reduce by rule 15


state 139:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp 

	ID	shift 23
	INT	shift 22
	STRING	shift 21
	LPAREN	shift 20
	IF	shift 19
	WHILE	shift 18
	FOR	shift 17
	LET	shift 16
	BREAK	shift 15
	NIL	shift 14

	exp	goto 141
	lvalue	goto 12
	seqs	goto 11
	funcall	goto 10
	arthcomp	goto 9
	logicops	goto 8
	comrcomp	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	unitexp	goto 1

	.	error


state 140:

	tyfields : ID COLON ID COMMA tyfields .  (reduce by rule 64)



	.	reduce by rule 64


state 141:

	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 
	comrcomp : exp . EQ exp 
	comrcomp : exp . NEQ exp 
	comrcomp : exp . LT exp 
	comrcomp : exp . LE exp 
	comrcomp : exp . GT exp 
	comrcomp : exp . GE exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .  (reduce by rule 68)

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27


	.	reduce by rule 68


state 142:


	EOF	accept


	.	error

571 of 1009 action table entries left after compaction
467 goto table entries
