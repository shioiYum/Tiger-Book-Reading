34 shift/reduce conflicts

error:  state 23: shift/reduce conflict (shift RPAREN, reduce by rule 25)
error:  state 26: shift/reduce conflict (shift LBRACK, reduce by rule 59)
error:  state 51: shift/reduce conflict (shift RPAREN, reduce by rule 23)
error:  state 88: shift/reduce conflict (shift OR, reduce by rule 16)
error:  state 88: shift/reduce conflict (shift AND, reduce by rule 16)
error:  state 88: shift/reduce conflict (shift DIVIDE, reduce by rule 16)
error:  state 88: shift/reduce conflict (shift TIMES, reduce by rule 16)
error:  state 88: shift/reduce conflict (shift MINUS, reduce by rule 16)
error:  state 88: shift/reduce conflict (shift PLUS, reduce by rule 16)
error:  state 89: shift/reduce conflict (shift ELSE, reduce by rule 41)
error:  state 89: shift/reduce conflict (shift OR, reduce by rule 41)
error:  state 89: shift/reduce conflict (shift AND, reduce by rule 41)
error:  state 89: shift/reduce conflict (shift DIVIDE, reduce by rule 41)
error:  state 89: shift/reduce conflict (shift TIMES, reduce by rule 41)
error:  state 89: shift/reduce conflict (shift MINUS, reduce by rule 41)
error:  state 89: shift/reduce conflict (shift PLUS, reduce by rule 41)
error:  state 115: shift/reduce conflict (shift OR, reduce by rule 40)
error:  state 115: shift/reduce conflict (shift AND, reduce by rule 40)
error:  state 115: shift/reduce conflict (shift DIVIDE, reduce by rule 40)
error:  state 115: shift/reduce conflict (shift TIMES, reduce by rule 40)
error:  state 115: shift/reduce conflict (shift MINUS, reduce by rule 40)
error:  state 115: shift/reduce conflict (shift PLUS, reduce by rule 40)
error:  state 117: shift/reduce conflict (shift OR, reduce by rule 38)
error:  state 117: shift/reduce conflict (shift AND, reduce by rule 38)
error:  state 117: shift/reduce conflict (shift DIVIDE, reduce by rule 38)
error:  state 117: shift/reduce conflict (shift TIMES, reduce by rule 38)
error:  state 117: shift/reduce conflict (shift MINUS, reduce by rule 38)
error:  state 117: shift/reduce conflict (shift PLUS, reduce by rule 38)
error:  state 128: shift/reduce conflict (shift OR, reduce by rule 17)
error:  state 128: shift/reduce conflict (shift AND, reduce by rule 17)
error:  state 128: shift/reduce conflict (shift DIVIDE, reduce by rule 17)
error:  state 128: shift/reduce conflict (shift TIMES, reduce by rule 17)
error:  state 128: shift/reduce conflict (shift MINUS, reduce by rule 17)
error:  state 128: shift/reduce conflict (shift PLUS, reduce by rule 17)

state 0:

	program : . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	LBRACE	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 14
	program	goto 132
	lvalue	goto 13
	vallessexp	goto 12
	seqs	goto 11
	negation	goto 10
	funcall	goto 9
	arthcomp	goto 8
	logicops	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	unitexp	goto 1

	.	error


state 1:

	exp : unitexp .  (reduce by rule 4)



	.	reduce by rule 4


state 2:

	exp : letexp .  (reduce by rule 18)



	.	reduce by rule 18


state 3:

	exp : ifthen .  (reduce by rule 15)



	.	reduce by rule 15


state 4:

	exp : assign .  (reduce by rule 14)



	.	reduce by rule 14


state 5:

	exp : arraycreate .  (reduce by rule 13)



	.	reduce by rule 13


state 6:

	exp : recordcreate .  (reduce by rule 12)



	.	reduce by rule 12


state 7:

	exp : logicops .  (reduce by rule 11)



	.	reduce by rule 11


state 8:

	exp : arthcomp .  (reduce by rule 10)



	.	reduce by rule 10


state 9:

	exp : funcall .  (reduce by rule 9)



	.	reduce by rule 9


state 10:

	exp : negation .  (reduce by rule 8)



	.	reduce by rule 8


state 11:

	exp : seqs .  (reduce by rule 3)



	.	reduce by rule 3


state 12:

	exp : vallessexp .  (reduce by rule 2)



	.	reduce by rule 2


state 13:

	exp : lvalue .  (reduce by rule 1)
	lvalue : lvalue . LBRACK exp RBRACK 
	lvalue : lvalue . DOT ID 
	assign : lvalue . ASSIGN exp 

	LBRACK	shift 29
	DOT	shift 28
	ASSIGN	shift 27


	.	reduce by rule 1


state 14:

	program : exp .  (reduce by rule 0)
	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	AND	shift 31
	OR	shift 30


	.	reduce by rule 0


state 15:

	exp : NIL .  (reduce by rule 21)



	.	reduce by rule 21


state 16:

	exp : BREAK .  (reduce by rule 20)



	.	reduce by rule 20


state 17:

	letexp : LET . decs IN expseqs END 

	FUNCTION	shift 43
	VAR	shift 42
	TYPE	shift 41

	decs	goto 40
	dec	goto 39
	tydec	goto 38
	vardec	goto 37
	fundec	goto 36

	.	reduce by rule 44


state 18:

	exp : FOR . ID ASSIGN exp TO exp DO exp 

	ID	shift 44


	.	error


state 19:

	exp : WHILE . exp DO exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	LBRACE	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 45
	lvalue	goto 13
	vallessexp	goto 12
	seqs	goto 11
	negation	goto 10
	funcall	goto 9
	arthcomp	goto 8
	logicops	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	unitexp	goto 1

	.	error


state 20:

	ifthen : IF . exp THEN exp ELSE exp 
	ifthen : IF . exp THEN exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	LBRACE	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 46
	lvalue	goto 13
	vallessexp	goto 12
	seqs	goto 11
	negation	goto 10
	funcall	goto 9
	arthcomp	goto 8
	logicops	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	unitexp	goto 1

	.	error


state 21:

	exp : MINUS . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	LBRACE	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 47
	lvalue	goto 13
	vallessexp	goto 12
	seqs	goto 11
	negation	goto 10
	funcall	goto 9
	arthcomp	goto 8
	logicops	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	unitexp	goto 1

	.	error


state 22:

	recordcreate : LBRACE . recassign RBRACE 

	ID	shift 49

	recassign	goto 48

	.	error

error:  state 23: shift/reduce conflict (shift RPAREN, reduce by rule 25)

state 23:

	exp : LPAREN . exp RPAREN 
	seqs : LPAREN . expseqs RPAREN 
	unitexp : LPAREN . RPAREN 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	RPAREN	shift 52
	LBRACE	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 51
	lvalue	goto 13
	vallessexp	goto 12
	seqs	goto 11
	expseqs	goto 50
	negation	goto 10
	funcall	goto 9
	arthcomp	goto 8
	logicops	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	unitexp	goto 1

	.	error


state 24:

	exp : STRING .  (reduce by rule 6)



	.	reduce by rule 6


state 25:

	exp : INT .  (reduce by rule 5)



	.	reduce by rule 5

error:  state 26: shift/reduce conflict (shift LBRACK, reduce by rule 59)

state 26:

	lvalue : ID .  (reduce by rule 59)
	funcall : ID . LPAREN args RPAREN 
	arraycreate : ID . LBRACK exp RBRACK OF exp 

	LPAREN	shift 54
	LBRACK	shift 53


	.	reduce by rule 59


state 27:

	assign : lvalue ASSIGN . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	LBRACE	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 55
	lvalue	goto 13
	vallessexp	goto 12
	seqs	goto 11
	negation	goto 10
	funcall	goto 9
	arthcomp	goto 8
	logicops	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	unitexp	goto 1

	.	error


state 28:

	lvalue : lvalue DOT . ID 

	ID	shift 56


	.	error


state 29:

	lvalue : lvalue LBRACK . exp RBRACK 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	LBRACE	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 57
	lvalue	goto 13
	vallessexp	goto 12
	seqs	goto 11
	negation	goto 10
	funcall	goto 9
	arthcomp	goto 8
	logicops	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	unitexp	goto 1

	.	error


state 30:

	logicops : exp OR . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	LBRACE	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 58
	lvalue	goto 13
	vallessexp	goto 12
	seqs	goto 11
	negation	goto 10
	funcall	goto 9
	arthcomp	goto 8
	logicops	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	unitexp	goto 1

	.	error


state 31:

	logicops : exp AND . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	LBRACE	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 59
	lvalue	goto 13
	vallessexp	goto 12
	seqs	goto 11
	negation	goto 10
	funcall	goto 9
	arthcomp	goto 8
	logicops	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	unitexp	goto 1

	.	error


state 32:

	arthcomp : exp DIVIDE . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	LBRACE	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 60
	lvalue	goto 13
	vallessexp	goto 12
	seqs	goto 11
	negation	goto 10
	funcall	goto 9
	arthcomp	goto 8
	logicops	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	unitexp	goto 1

	.	error


state 33:

	arthcomp : exp TIMES . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	LBRACE	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 61
	lvalue	goto 13
	vallessexp	goto 12
	seqs	goto 11
	negation	goto 10
	funcall	goto 9
	arthcomp	goto 8
	logicops	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	unitexp	goto 1

	.	error


state 34:

	arthcomp : exp MINUS . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	LBRACE	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 62
	lvalue	goto 13
	vallessexp	goto 12
	seqs	goto 11
	negation	goto 10
	funcall	goto 9
	arthcomp	goto 8
	logicops	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	unitexp	goto 1

	.	error


state 35:

	arthcomp : exp PLUS . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	LBRACE	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 63
	lvalue	goto 13
	vallessexp	goto 12
	seqs	goto 11
	negation	goto 10
	funcall	goto 9
	arthcomp	goto 8
	logicops	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	unitexp	goto 1

	.	error


state 36:

	dec : fundec .  (reduce by rule 47)



	.	reduce by rule 47


state 37:

	dec : vardec .  (reduce by rule 46)



	.	reduce by rule 46


state 38:

	dec : tydec .  (reduce by rule 45)



	.	reduce by rule 45


state 39:

	decs : dec . decs 

	FUNCTION	shift 43
	VAR	shift 42
	TYPE	shift 41

	decs	goto 64
	dec	goto 39
	tydec	goto 38
	vardec	goto 37
	fundec	goto 36

	.	reduce by rule 44


state 40:

	letexp : LET decs . IN expseqs END 

	IN	shift 65


	.	error


state 41:

	tydec : TYPE . ID EQ ty 

	ID	shift 66


	.	error


state 42:

	vardec : VAR . ID ASSIGN exp 
	vardec : VAR . ID COLON ID ASSIGN exp 

	ID	shift 67


	.	error


state 43:

	fundec : FUNCTION . ID LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp 

	ID	shift 68


	.	error


state 44:

	exp : FOR ID . ASSIGN exp TO exp DO exp 

	ASSIGN	shift 69


	.	error


state 45:

	exp : WHILE exp . DO exp 
	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	AND	shift 31
	OR	shift 30
	DO	shift 70


	.	error


state 46:

	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 
	ifthen : IF exp . THEN exp ELSE exp 
	ifthen : IF exp . THEN exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	AND	shift 31
	OR	shift 30
	THEN	shift 71


	.	error


state 47:

	exp : MINUS exp .  (reduce by rule 7)
	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 



	.	reduce by rule 7


state 48:

	recordcreate : LBRACE recassign . RBRACE 

	RBRACE	shift 72


	.	error


state 49:

	recassign : ID . EQ exp 
	recassign : ID . EQ exp COMMA recassign 

	EQ	shift 73


	.	error


state 50:

	seqs : LPAREN expseqs . RPAREN 

	RPAREN	shift 74


	.	error

error:  state 51: shift/reduce conflict (shift RPAREN, reduce by rule 23)

state 51:

	exp : LPAREN exp . RPAREN 
	expseqs : exp .  (reduce by rule 23)
	expseqs : exp . SEMICOLON expseqs 
	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 

	SEMICOLON	shift 76
	RPAREN	shift 75
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	AND	shift 31
	OR	shift 30


	.	error


state 52:

	unitexp : LPAREN RPAREN .  (reduce by rule 62)



	.	reduce by rule 62


state 53:

	arraycreate : ID LBRACK . exp RBRACK OF exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	LBRACE	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 77
	lvalue	goto 13
	vallessexp	goto 12
	seqs	goto 11
	negation	goto 10
	funcall	goto 9
	arthcomp	goto 8
	logicops	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	unitexp	goto 1

	.	error


state 54:

	funcall : ID LPAREN . args RPAREN 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	LBRACE	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 79
	lvalue	goto 13
	vallessexp	goto 12
	seqs	goto 11
	negation	goto 10
	funcall	goto 9
	arthcomp	goto 8
	logicops	goto 7
	args	goto 78
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	unitexp	goto 1

	.	error


state 55:

	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 
	assign : lvalue ASSIGN exp .  (reduce by rule 39)

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	AND	shift 31
	OR	shift 30


	.	reduce by rule 39


state 56:

	lvalue : lvalue DOT ID .  (reduce by rule 61)



	.	reduce by rule 61


state 57:

	lvalue : lvalue LBRACK exp . RBRACK 
	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 

	RBRACK	shift 80
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	AND	shift 31
	OR	shift 30


	.	error


state 58:

	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 
	logicops : exp OR exp .  (reduce by rule 34)

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32


	.	reduce by rule 34


state 59:

	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp AND exp .  (reduce by rule 33)
	logicops : exp . OR exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32


	.	reduce by rule 33


state 60:

	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	arthcomp : exp DIVIDE exp .  (reduce by rule 32)
	logicops : exp . AND exp 
	logicops : exp . OR exp 



	.	reduce by rule 32


state 61:

	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp TIMES exp .  (reduce by rule 31)
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 



	.	reduce by rule 31


state 62:

	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp MINUS exp .  (reduce by rule 30)
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 

	TIMES	shift 33
	DIVIDE	shift 32


	.	reduce by rule 30


state 63:

	arthcomp : exp . PLUS exp 
	arthcomp : exp PLUS exp .  (reduce by rule 29)
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 

	TIMES	shift 33
	DIVIDE	shift 32


	.	reduce by rule 29


state 64:

	decs : dec decs .  (reduce by rule 43)



	.	reduce by rule 43


state 65:

	letexp : LET decs IN . expseqs END 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	LBRACE	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 82
	lvalue	goto 13
	vallessexp	goto 12
	seqs	goto 11
	expseqs	goto 81
	negation	goto 10
	funcall	goto 9
	arthcomp	goto 8
	logicops	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	unitexp	goto 1

	.	reduce by rule 25


state 66:

	tydec : TYPE ID . EQ ty 

	EQ	shift 83


	.	error


state 67:

	vardec : VAR ID . ASSIGN exp 
	vardec : VAR ID . COLON ID ASSIGN exp 

	COLON	shift 85
	ASSIGN	shift 84


	.	error


state 68:

	fundec : FUNCTION ID . LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp 

	LPAREN	shift 86


	.	error


state 69:

	exp : FOR ID ASSIGN . exp TO exp DO exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	LBRACE	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 87
	lvalue	goto 13
	vallessexp	goto 12
	seqs	goto 11
	negation	goto 10
	funcall	goto 9
	arthcomp	goto 8
	logicops	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	unitexp	goto 1

	.	error


state 70:

	exp : WHILE exp DO . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	LBRACE	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 88
	lvalue	goto 13
	vallessexp	goto 12
	seqs	goto 11
	negation	goto 10
	funcall	goto 9
	arthcomp	goto 8
	logicops	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	unitexp	goto 1

	.	error


state 71:

	ifthen : IF exp THEN . exp ELSE exp 
	ifthen : IF exp THEN . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	LBRACE	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 89
	lvalue	goto 13
	vallessexp	goto 12
	seqs	goto 11
	negation	goto 10
	funcall	goto 9
	arthcomp	goto 8
	logicops	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	unitexp	goto 1

	.	error


state 72:

	recordcreate : LBRACE recassign RBRACE .  (reduce by rule 35)



	.	reduce by rule 35


state 73:

	recassign : ID EQ . exp 
	recassign : ID EQ . exp COMMA recassign 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	LBRACE	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 90
	lvalue	goto 13
	vallessexp	goto 12
	seqs	goto 11
	negation	goto 10
	funcall	goto 9
	arthcomp	goto 8
	logicops	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	unitexp	goto 1

	.	error


state 74:

	seqs : LPAREN expseqs RPAREN .  (reduce by rule 22)



	.	reduce by rule 22


state 75:

	exp : LPAREN exp RPAREN .  (reduce by rule 19)



	.	reduce by rule 19


state 76:

	expseqs : exp SEMICOLON . expseqs 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	LBRACE	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 82
	lvalue	goto 13
	vallessexp	goto 12
	seqs	goto 11
	expseqs	goto 91
	negation	goto 10
	funcall	goto 9
	arthcomp	goto 8
	logicops	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	unitexp	goto 1

	.	reduce by rule 25


state 77:

	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 
	arraycreate : ID LBRACK exp . RBRACK OF exp 

	RBRACK	shift 92
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	AND	shift 31
	OR	shift 30


	.	error


state 78:

	funcall : ID LPAREN args . RPAREN 

	RPAREN	shift 93


	.	error


state 79:

	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 
	args : exp .  (reduce by rule 27)
	args : exp . COMMA args 

	COMMA	shift 94
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	AND	shift 31
	OR	shift 30


	.	reduce by rule 27


state 80:

	lvalue : lvalue LBRACK exp RBRACK .  (reduce by rule 60)



	.	reduce by rule 60


state 81:

	letexp : LET decs IN expseqs . END 

	END	shift 95


	.	error


state 82:

	expseqs : exp .  (reduce by rule 23)
	expseqs : exp . SEMICOLON expseqs 
	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 

	SEMICOLON	shift 76
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	AND	shift 31
	OR	shift 30


	.	reduce by rule 23


state 83:

	tydec : TYPE ID EQ . ty 

	ID	shift 99
	LBRACE	shift 98
	ARRAY	shift 97

	ty	goto 96

	.	error


state 84:

	vardec : VAR ID ASSIGN . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	LBRACE	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 100
	lvalue	goto 13
	vallessexp	goto 12
	seqs	goto 11
	negation	goto 10
	funcall	goto 9
	arthcomp	goto 8
	logicops	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	unitexp	goto 1

	.	error


state 85:

	vardec : VAR ID COLON . ID ASSIGN exp 

	ID	shift 101


	.	error


state 86:

	fundec : FUNCTION ID LPAREN . tyfields RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp 

	ID	shift 103

	tyfields	goto 102

	.	reduce by rule 52


state 87:

	exp : FOR ID ASSIGN exp . TO exp DO exp 
	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	AND	shift 31
	OR	shift 30
	TO	shift 104


	.	error

error:  state 88: shift/reduce conflict (shift OR, reduce by rule 16)
error:  state 88: shift/reduce conflict (shift AND, reduce by rule 16)
error:  state 88: shift/reduce conflict (shift DIVIDE, reduce by rule 16)
error:  state 88: shift/reduce conflict (shift TIMES, reduce by rule 16)
error:  state 88: shift/reduce conflict (shift MINUS, reduce by rule 16)
error:  state 88: shift/reduce conflict (shift PLUS, reduce by rule 16)

state 88:

	exp : WHILE exp DO exp .  (reduce by rule 16)
	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	AND	shift 31
	OR	shift 30


	.	reduce by rule 16

error:  state 89: shift/reduce conflict (shift ELSE, reduce by rule 41)
error:  state 89: shift/reduce conflict (shift OR, reduce by rule 41)
error:  state 89: shift/reduce conflict (shift AND, reduce by rule 41)
error:  state 89: shift/reduce conflict (shift DIVIDE, reduce by rule 41)
error:  state 89: shift/reduce conflict (shift TIMES, reduce by rule 41)
error:  state 89: shift/reduce conflict (shift MINUS, reduce by rule 41)
error:  state 89: shift/reduce conflict (shift PLUS, reduce by rule 41)

state 89:

	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 
	ifthen : IF exp THEN exp . ELSE exp 
	ifthen : IF exp THEN exp .  (reduce by rule 41)

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	AND	shift 31
	OR	shift 30
	ELSE	shift 105


	.	reduce by rule 41


state 90:

	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 
	recassign : ID EQ exp .  (reduce by rule 36)
	recassign : ID EQ exp . COMMA recassign 

	COMMA	shift 106
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	AND	shift 31
	OR	shift 30


	.	reduce by rule 36


state 91:

	expseqs : exp SEMICOLON expseqs .  (reduce by rule 24)



	.	reduce by rule 24


state 92:

	arraycreate : ID LBRACK exp RBRACK . OF exp 

	OF	shift 107


	.	error


state 93:

	funcall : ID LPAREN args RPAREN .  (reduce by rule 26)



	.	reduce by rule 26


state 94:

	args : exp COMMA . args 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	LBRACE	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 79
	lvalue	goto 13
	vallessexp	goto 12
	seqs	goto 11
	negation	goto 10
	funcall	goto 9
	arthcomp	goto 8
	logicops	goto 7
	args	goto 108
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	unitexp	goto 1

	.	error


state 95:

	letexp : LET decs IN expseqs END .  (reduce by rule 42)



	.	reduce by rule 42


state 96:

	tydec : TYPE ID EQ ty .  (reduce by rule 48)



	.	reduce by rule 48


state 97:

	ty : ARRAY . OF ID 

	OF	shift 109


	.	error


state 98:

	ty : LBRACE . tyfields RBRACE 

	ID	shift 103

	tyfields	goto 110

	.	reduce by rule 52


state 99:

	ty : ID .  (reduce by rule 49)



	.	reduce by rule 49


state 100:

	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 
	vardec : VAR ID ASSIGN exp .  (reduce by rule 55)

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	AND	shift 31
	OR	shift 30


	.	reduce by rule 55


state 101:

	vardec : VAR ID COLON ID . ASSIGN exp 

	ASSIGN	shift 111


	.	error


state 102:

	fundec : FUNCTION ID LPAREN tyfields . RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp 

	RPAREN	shift 112


	.	error


state 103:

	tyfields : ID . COLON ID 
	tyfields : ID . COLON ID COMMA tyfields 

	COLON	shift 113


	.	error


state 104:

	exp : FOR ID ASSIGN exp TO . exp DO exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	LBRACE	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 114
	lvalue	goto 13
	vallessexp	goto 12
	seqs	goto 11
	negation	goto 10
	funcall	goto 9
	arthcomp	goto 8
	logicops	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	unitexp	goto 1

	.	error


state 105:

	ifthen : IF exp THEN exp ELSE . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	LBRACE	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 115
	lvalue	goto 13
	vallessexp	goto 12
	seqs	goto 11
	negation	goto 10
	funcall	goto 9
	arthcomp	goto 8
	logicops	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	unitexp	goto 1

	.	error


state 106:

	recassign : ID EQ exp COMMA . recassign 

	ID	shift 49

	recassign	goto 116

	.	error


state 107:

	arraycreate : ID LBRACK exp RBRACK OF . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	LBRACE	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 117
	lvalue	goto 13
	vallessexp	goto 12
	seqs	goto 11
	negation	goto 10
	funcall	goto 9
	arthcomp	goto 8
	logicops	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	unitexp	goto 1

	.	error


state 108:

	args : exp COMMA args .  (reduce by rule 28)



	.	reduce by rule 28


state 109:

	ty : ARRAY OF . ID 

	ID	shift 118


	.	error


state 110:

	ty : LBRACE tyfields . RBRACE 

	RBRACE	shift 119


	.	error


state 111:

	vardec : VAR ID COLON ID ASSIGN . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	LBRACE	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 120
	lvalue	goto 13
	vallessexp	goto 12
	seqs	goto 11
	negation	goto 10
	funcall	goto 9
	arthcomp	goto 8
	logicops	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	unitexp	goto 1

	.	error


state 112:

	fundec : FUNCTION ID LPAREN tyfields RPAREN . EQ exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp 

	COLON	shift 122
	EQ	shift 121


	.	error


state 113:

	tyfields : ID COLON . ID 
	tyfields : ID COLON . ID COMMA tyfields 

	ID	shift 123


	.	error


state 114:

	exp : FOR ID ASSIGN exp TO exp . DO exp 
	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	AND	shift 31
	OR	shift 30
	DO	shift 124


	.	error

error:  state 115: shift/reduce conflict (shift OR, reduce by rule 40)
error:  state 115: shift/reduce conflict (shift AND, reduce by rule 40)
error:  state 115: shift/reduce conflict (shift DIVIDE, reduce by rule 40)
error:  state 115: shift/reduce conflict (shift TIMES, reduce by rule 40)
error:  state 115: shift/reduce conflict (shift MINUS, reduce by rule 40)
error:  state 115: shift/reduce conflict (shift PLUS, reduce by rule 40)

state 115:

	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 
	ifthen : IF exp THEN exp ELSE exp .  (reduce by rule 40)

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	AND	shift 31
	OR	shift 30


	.	reduce by rule 40


state 116:

	recassign : ID EQ exp COMMA recassign .  (reduce by rule 37)



	.	reduce by rule 37

error:  state 117: shift/reduce conflict (shift OR, reduce by rule 38)
error:  state 117: shift/reduce conflict (shift AND, reduce by rule 38)
error:  state 117: shift/reduce conflict (shift DIVIDE, reduce by rule 38)
error:  state 117: shift/reduce conflict (shift TIMES, reduce by rule 38)
error:  state 117: shift/reduce conflict (shift MINUS, reduce by rule 38)
error:  state 117: shift/reduce conflict (shift PLUS, reduce by rule 38)

state 117:

	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 
	arraycreate : ID LBRACK exp RBRACK OF exp .  (reduce by rule 38)

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	AND	shift 31
	OR	shift 30


	.	reduce by rule 38


state 118:

	ty : ARRAY OF ID .  (reduce by rule 51)



	.	reduce by rule 51


state 119:

	ty : LBRACE tyfields RBRACE .  (reduce by rule 50)



	.	reduce by rule 50


state 120:

	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 
	vardec : VAR ID COLON ID ASSIGN exp .  (reduce by rule 56)

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	AND	shift 31
	OR	shift 30


	.	reduce by rule 56


state 121:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	LBRACE	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 125
	lvalue	goto 13
	vallessexp	goto 12
	seqs	goto 11
	negation	goto 10
	funcall	goto 9
	arthcomp	goto 8
	logicops	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	unitexp	goto 1

	.	error


state 122:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp 

	ID	shift 126


	.	error


state 123:

	tyfields : ID COLON ID .  (reduce by rule 53)
	tyfields : ID COLON ID . COMMA tyfields 

	COMMA	shift 127


	.	reduce by rule 53


state 124:

	exp : FOR ID ASSIGN exp TO exp DO . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	LBRACE	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 128
	lvalue	goto 13
	vallessexp	goto 12
	seqs	goto 11
	negation	goto 10
	funcall	goto 9
	arthcomp	goto 8
	logicops	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	unitexp	goto 1

	.	error


state 125:

	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ exp .  (reduce by rule 57)

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	AND	shift 31
	OR	shift 30


	.	reduce by rule 57


state 126:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp 

	EQ	shift 129


	.	error


state 127:

	tyfields : ID COLON ID COMMA . tyfields 

	ID	shift 103

	tyfields	goto 130

	.	reduce by rule 52

error:  state 128: shift/reduce conflict (shift OR, reduce by rule 17)
error:  state 128: shift/reduce conflict (shift AND, reduce by rule 17)
error:  state 128: shift/reduce conflict (shift DIVIDE, reduce by rule 17)
error:  state 128: shift/reduce conflict (shift TIMES, reduce by rule 17)
error:  state 128: shift/reduce conflict (shift MINUS, reduce by rule 17)
error:  state 128: shift/reduce conflict (shift PLUS, reduce by rule 17)

state 128:

	exp : FOR ID ASSIGN exp TO exp DO exp .  (reduce by rule 17)
	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	AND	shift 31
	OR	shift 30


	.	reduce by rule 17


state 129:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	LBRACE	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 131
	lvalue	goto 13
	vallessexp	goto 12
	seqs	goto 11
	negation	goto 10
	funcall	goto 9
	arthcomp	goto 8
	logicops	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	unitexp	goto 1

	.	error


state 130:

	tyfields : ID COLON ID COMMA tyfields .  (reduce by rule 54)



	.	reduce by rule 54


state 131:

	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .  (reduce by rule 58)

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	AND	shift 31
	OR	shift 30


	.	reduce by rule 58


state 132:


	EOF	accept


	.	error

231 of 694 action table entries left after compaction
442 goto table entries
