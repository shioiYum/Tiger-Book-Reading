31 reduce/reduce conflicts
64 shift/reduce conflicts

error:  state 26: shift/reduce conflict (shift LBRACK, reduce by rule 62)
error:  state 26: shift/reduce conflict (shift LPAREN, reduce by rule 62)
error:  state 51: shift/reduce conflict (shift RPAREN, reduce by rule 17)
error:  state 54: shift/reduce conflict (shift OR, reduce by rule 36)
error:  state 54: shift/reduce conflict (shift AND, reduce by rule 36)
error:  state 54: shift/reduce conflict (shift DIVIDE, reduce by rule 36)
error:  state 54: shift/reduce conflict (shift TIMES, reduce by rule 36)
error:  state 54: shift/reduce conflict (shift MINUS, reduce by rule 36)
error:  state 54: shift/reduce conflict (shift PLUS, reduce by rule 36)
error:  state 57: shift/reduce conflict (shift OR, reduce by rule 31)
error:  state 57: shift/reduce conflict (shift AND, reduce by rule 31)
error:  state 57: shift/reduce conflict (shift DIVIDE, reduce by rule 31)
error:  state 57: shift/reduce conflict (shift TIMES, reduce by rule 31)
error:  state 57: shift/reduce conflict (shift MINUS, reduce by rule 31)
error:  state 57: shift/reduce conflict (shift PLUS, reduce by rule 31)
error:  state 58: shift/reduce conflict (shift OR, reduce by rule 30)
error:  state 58: shift/reduce conflict (shift AND, reduce by rule 30)
error:  state 58: shift/reduce conflict (shift DIVIDE, reduce by rule 30)
error:  state 58: shift/reduce conflict (shift TIMES, reduce by rule 30)
error:  state 58: shift/reduce conflict (shift MINUS, reduce by rule 30)
error:  state 58: shift/reduce conflict (shift PLUS, reduce by rule 30)
error:  state 59: shift/reduce conflict (shift OR, reduce by rule 29)
error:  state 59: shift/reduce conflict (shift AND, reduce by rule 29)
error:  state 60: shift/reduce conflict (shift OR, reduce by rule 28)
error:  state 60: shift/reduce conflict (shift AND, reduce by rule 28)
error:  state 61: shift/reduce conflict (shift OR, reduce by rule 27)
error:  state 61: shift/reduce conflict (shift AND, reduce by rule 27)
error:  state 62: shift/reduce conflict (shift OR, reduce by rule 26)
error:  state 62: shift/reduce conflict (shift AND, reduce by rule 26)
error:  state 88: shift/reduce conflict (shift BREAK, reduce by rule 41)
error:  state 88: shift/reduce conflict (shift LET, reduce by rule 41)
error:  state 88: shift/reduce conflict (shift FOR, reduce by rule 41)
error:  state 88: shift/reduce conflict (shift WHILE, reduce by rule 41)
error:  state 88: shift/reduce conflict (shift IF, reduce by rule 41)
error:  state 88: shift/reduce conflict (shift OR, reduce by rule 41)
error:  state 88: shift/reduce conflict (shift AND, reduce by rule 41)
error:  state 88: shift/reduce conflict (shift DIVIDE, reduce by rule 41)
error:  state 88: shift/reduce conflict (shift TIMES, reduce by rule 41)
error:  state 88: shift/reduce conflict (shift MINUS, reduce by rule 41)
error:  state 88: shift/reduce conflict (shift PLUS, reduce by rule 41)
error:  state 88: shift/reduce conflict (shift LBRACE, reduce by rule 41)
error:  state 88: shift/reduce conflict (shift LPAREN, reduce by rule 41)
error:  state 88: shift/reduce conflict (shift STRING, reduce by rule 41)
error:  state 88: shift/reduce conflict (shift INT, reduce by rule 41)
error:  state 88: shift/reduce conflict (shift ID, reduce by rule 41)
error:  state 90: shift/reduce conflict (shift ELSE, reduce by rule 38)
error:  state 90: shift/reduce conflict (shift OR, reduce by rule 38)
error:  state 90: shift/reduce conflict (shift AND, reduce by rule 38)
error:  state 90: shift/reduce conflict (shift DIVIDE, reduce by rule 38)
error:  state 90: shift/reduce conflict (shift TIMES, reduce by rule 38)
error:  state 90: shift/reduce conflict (shift MINUS, reduce by rule 38)
error:  state 90: shift/reduce conflict (shift PLUS, reduce by rule 38)
error:  state 118: reduce/reduce conflict between rule 22 and rule 20 on TYPE
error:  state 118: reduce/reduce conflict between rule 22 and rule 20 on VAR
error:  state 118: reduce/reduce conflict between rule 22 and rule 20 on FUNCTION
error:  state 118: reduce/reduce conflict between rule 22 and rule 20 on BREAK
error:  state 118: reduce/reduce conflict between rule 22 and rule 20 on END
error:  state 118: reduce/reduce conflict between rule 22 and rule 20 on IN
error:  state 118: reduce/reduce conflict between rule 22 and rule 20 on LET
error:  state 118: reduce/reduce conflict between rule 22 and rule 20 on DO
error:  state 118: reduce/reduce conflict between rule 22 and rule 20 on TO
error:  state 118: reduce/reduce conflict between rule 22 and rule 20 on FOR
error:  state 118: reduce/reduce conflict between rule 22 and rule 20 on WHILE
error:  state 118: reduce/reduce conflict between rule 22 and rule 20 on ELSE
error:  state 118: reduce/reduce conflict between rule 22 and rule 20 on THEN
error:  state 118: reduce/reduce conflict between rule 22 and rule 20 on IF
error:  state 118: reduce/reduce conflict between rule 22 and rule 20 on OR
error:  state 118: reduce/reduce conflict between rule 22 and rule 20 on AND
error:  state 118: reduce/reduce conflict between rule 22 and rule 20 on DIVIDE
error:  state 118: reduce/reduce conflict between rule 22 and rule 20 on TIMES
error:  state 118: reduce/reduce conflict between rule 22 and rule 20 on MINUS
error:  state 118: reduce/reduce conflict between rule 22 and rule 20 on PLUS
error:  state 118: reduce/reduce conflict between rule 22 and rule 20 on RBRACE
error:  state 118: reduce/reduce conflict between rule 22 and rule 20 on LBRACE
error:  state 118: reduce/reduce conflict between rule 22 and rule 20 on RBRACK
error:  state 118: reduce/reduce conflict between rule 22 and rule 20 on RPAREN
error:  state 118: reduce/reduce conflict between rule 22 and rule 20 on LPAREN
error:  state 118: reduce/reduce conflict between rule 22 and rule 20 on SEMICOLON
error:  state 118: reduce/reduce conflict between rule 22 and rule 20 on COMMA
error:  state 118: reduce/reduce conflict between rule 22 and rule 20 on STRING
error:  state 118: reduce/reduce conflict between rule 22 and rule 20 on INT
error:  state 118: reduce/reduce conflict between rule 22 and rule 20 on ID
error:  state 118: reduce/reduce conflict between rule 22 and rule 20 on EOF
error:  state 119: shift/reduce conflict (shift OR, reduce by rule 37)
error:  state 119: shift/reduce conflict (shift AND, reduce by rule 37)
error:  state 119: shift/reduce conflict (shift DIVIDE, reduce by rule 37)
error:  state 119: shift/reduce conflict (shift TIMES, reduce by rule 37)
error:  state 119: shift/reduce conflict (shift MINUS, reduce by rule 37)
error:  state 119: shift/reduce conflict (shift PLUS, reduce by rule 37)
error:  state 121: shift/reduce conflict (shift OR, reduce by rule 35)
error:  state 121: shift/reduce conflict (shift AND, reduce by rule 35)
error:  state 121: shift/reduce conflict (shift DIVIDE, reduce by rule 35)
error:  state 121: shift/reduce conflict (shift TIMES, reduce by rule 35)
error:  state 121: shift/reduce conflict (shift MINUS, reduce by rule 35)
error:  state 121: shift/reduce conflict (shift PLUS, reduce by rule 35)

state 0:

	program : . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	LBRACE	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17

	exp	goto 16
	program	goto 136
	lvalue	goto 15
	vallessexp	goto 14
	seqs	goto 13
	literals	goto 12
	negation	goto 11
	funcall	goto 10
	arthcomp	goto 9
	logicops	goto 8
	looping	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	grp	goto 1

	.	error


state 1:

	exp : grp .  (reduce by rule 15)



	.	reduce by rule 15


state 2:

	exp : letexp .  (reduce by rule 14)



	.	reduce by rule 14


state 3:

	exp : ifthen .  (reduce by rule 12)



	.	reduce by rule 12


state 4:

	exp : assign .  (reduce by rule 11)



	.	reduce by rule 11


state 5:

	exp : arraycreate .  (reduce by rule 10)



	.	reduce by rule 10


state 6:

	exp : recordcreate .  (reduce by rule 9)



	.	reduce by rule 9


state 7:

	exp : looping .  (reduce by rule 13)



	.	reduce by rule 13


state 8:

	exp : logicops .  (reduce by rule 8)



	.	reduce by rule 8


state 9:

	exp : arthcomp .  (reduce by rule 7)



	.	reduce by rule 7


state 10:

	exp : funcall .  (reduce by rule 6)



	.	reduce by rule 6


state 11:

	exp : negation .  (reduce by rule 5)



	.	reduce by rule 5


state 12:

	exp : literals .  (reduce by rule 4)



	.	reduce by rule 4


state 13:

	exp : seqs .  (reduce by rule 3)



	.	reduce by rule 3


state 14:

	exp : vallessexp .  (reduce by rule 2)



	.	reduce by rule 2


state 15:

	exp : lvalue .  (reduce by rule 1)
	lvalue : lvalue . LBRACK exp RBRACK 
	lvalue : lvalue . DOT ID 
	assign : lvalue . ASSIGN exp 

	LBRACK	shift 29
	DOT	shift 28
	ASSIGN	shift 27


	.	reduce by rule 1


state 16:

	program : exp .  (reduce by rule 0)
	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	AND	shift 31
	OR	shift 30


	.	reduce by rule 0


state 17:

	letexp : LET . decs IN expseqs END 

	FUNCTION	shift 43
	VAR	shift 42
	TYPE	shift 41

	decs	goto 40
	dec	goto 39
	tydec	goto 38
	vardec	goto 37
	fundec	goto 36

	.	reduce by rule 47


state 18:

	looping : FOR . ID ASSIGN exp TO exp DO loopexp 

	ID	shift 44


	.	error


state 19:

	looping : WHILE . exp DO loopexp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	LBRACE	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17

	exp	goto 45
	lvalue	goto 15
	vallessexp	goto 14
	seqs	goto 13
	literals	goto 12
	negation	goto 11
	funcall	goto 10
	arthcomp	goto 9
	logicops	goto 8
	looping	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	grp	goto 1

	.	error


state 20:

	ifthen : IF . exp THEN exp ELSE exp 
	ifthen : IF . exp THEN exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	LBRACE	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17

	exp	goto 46
	lvalue	goto 15
	vallessexp	goto 14
	seqs	goto 13
	literals	goto 12
	negation	goto 11
	funcall	goto 10
	arthcomp	goto 9
	logicops	goto 8
	looping	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	grp	goto 1

	.	error


state 21:

	literals : MINUS . INT 

	INT	shift 47


	.	error


state 22:

	recordcreate : LBRACE . recassign RBRACE 

	ID	shift 49

	recassign	goto 48

	.	error


state 23:

	seqs : LPAREN . expseqs RPAREN 
	grp : LPAREN . exp RPAREN 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	LBRACE	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17

	exp	goto 51
	lvalue	goto 15
	vallessexp	goto 14
	seqs	goto 13
	expseqs	goto 50
	literals	goto 12
	negation	goto 11
	funcall	goto 10
	arthcomp	goto 9
	logicops	goto 8
	looping	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	grp	goto 1

	.	reduce by rule 19


state 24:

	literals : STRING .  (reduce by rule 21)



	.	reduce by rule 21


state 25:

	literals : INT .  (reduce by rule 20)



	.	reduce by rule 20

error:  state 26: shift/reduce conflict (shift LBRACK, reduce by rule 62)
error:  state 26: shift/reduce conflict (shift LPAREN, reduce by rule 62)

state 26:

	lvalue : ID .  (reduce by rule 62)
	funcall : ID . LPAREN args RPAREN 
	arraycreate : ID . LBRACK exp RBRACK OF exp 

	LPAREN	shift 53
	LBRACK	shift 52


	.	reduce by rule 62


state 27:

	assign : lvalue ASSIGN . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	LBRACE	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17

	exp	goto 54
	lvalue	goto 15
	vallessexp	goto 14
	seqs	goto 13
	literals	goto 12
	negation	goto 11
	funcall	goto 10
	arthcomp	goto 9
	logicops	goto 8
	looping	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	grp	goto 1

	.	error


state 28:

	lvalue : lvalue DOT . ID 

	ID	shift 55


	.	error


state 29:

	lvalue : lvalue LBRACK . exp RBRACK 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	LBRACE	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17

	exp	goto 56
	lvalue	goto 15
	vallessexp	goto 14
	seqs	goto 13
	literals	goto 12
	negation	goto 11
	funcall	goto 10
	arthcomp	goto 9
	logicops	goto 8
	looping	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	grp	goto 1

	.	error


state 30:

	logicops : exp OR . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	LBRACE	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17

	exp	goto 57
	lvalue	goto 15
	vallessexp	goto 14
	seqs	goto 13
	literals	goto 12
	negation	goto 11
	funcall	goto 10
	arthcomp	goto 9
	logicops	goto 8
	looping	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	grp	goto 1

	.	error


state 31:

	logicops : exp AND . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	LBRACE	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17

	exp	goto 58
	lvalue	goto 15
	vallessexp	goto 14
	seqs	goto 13
	literals	goto 12
	negation	goto 11
	funcall	goto 10
	arthcomp	goto 9
	logicops	goto 8
	looping	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	grp	goto 1

	.	error


state 32:

	arthcomp : exp DIVIDE . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	LBRACE	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17

	exp	goto 59
	lvalue	goto 15
	vallessexp	goto 14
	seqs	goto 13
	literals	goto 12
	negation	goto 11
	funcall	goto 10
	arthcomp	goto 9
	logicops	goto 8
	looping	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	grp	goto 1

	.	error


state 33:

	arthcomp : exp TIMES . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	LBRACE	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17

	exp	goto 60
	lvalue	goto 15
	vallessexp	goto 14
	seqs	goto 13
	literals	goto 12
	negation	goto 11
	funcall	goto 10
	arthcomp	goto 9
	logicops	goto 8
	looping	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	grp	goto 1

	.	error


state 34:

	arthcomp : exp MINUS . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	LBRACE	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17

	exp	goto 61
	lvalue	goto 15
	vallessexp	goto 14
	seqs	goto 13
	literals	goto 12
	negation	goto 11
	funcall	goto 10
	arthcomp	goto 9
	logicops	goto 8
	looping	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	grp	goto 1

	.	error


state 35:

	arthcomp : exp PLUS . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	LBRACE	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17

	exp	goto 62
	lvalue	goto 15
	vallessexp	goto 14
	seqs	goto 13
	literals	goto 12
	negation	goto 11
	funcall	goto 10
	arthcomp	goto 9
	logicops	goto 8
	looping	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	grp	goto 1

	.	error


state 36:

	dec : fundec .  (reduce by rule 50)



	.	reduce by rule 50


state 37:

	dec : vardec .  (reduce by rule 49)



	.	reduce by rule 49


state 38:

	dec : tydec .  (reduce by rule 48)



	.	reduce by rule 48


state 39:

	decs : dec . decs 

	FUNCTION	shift 43
	VAR	shift 42
	TYPE	shift 41

	decs	goto 63
	dec	goto 39
	tydec	goto 38
	vardec	goto 37
	fundec	goto 36

	.	reduce by rule 47


state 40:

	letexp : LET decs . IN expseqs END 

	IN	shift 64


	.	error


state 41:

	tydec : TYPE . ID EQ ty 

	ID	shift 65


	.	error


state 42:

	vardec : VAR . ID ASSIGN exp 
	vardec : VAR . ID COLON ID ASSIGN exp 

	ID	shift 66


	.	error


state 43:

	fundec : FUNCTION . ID LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp 

	ID	shift 67


	.	error


state 44:

	looping : FOR ID . ASSIGN exp TO exp DO loopexp 

	ASSIGN	shift 68


	.	error


state 45:

	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 
	looping : WHILE exp . DO loopexp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	AND	shift 31
	OR	shift 30
	DO	shift 69


	.	error


state 46:

	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 
	ifthen : IF exp . THEN exp ELSE exp 
	ifthen : IF exp . THEN exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	AND	shift 31
	OR	shift 30
	THEN	shift 70


	.	error


state 47:

	literals : MINUS INT .  (reduce by rule 22)



	.	reduce by rule 22


state 48:

	recordcreate : LBRACE recassign . RBRACE 

	RBRACE	shift 71


	.	error


state 49:

	recassign : ID . EQ exp 
	recassign : ID . EQ exp COMMA recassign 

	EQ	shift 72


	.	error


state 50:

	seqs : LPAREN expseqs . RPAREN 

	RPAREN	shift 73


	.	error

error:  state 51: shift/reduce conflict (shift RPAREN, reduce by rule 17)

state 51:

	expseqs : exp .  (reduce by rule 17)
	expseqs : exp . SEMICOLON expseqs 
	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 
	grp : LPAREN exp . RPAREN 

	SEMICOLON	shift 75
	RPAREN	shift 74
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	AND	shift 31
	OR	shift 30


	.	error


state 52:

	arraycreate : ID LBRACK . exp RBRACK OF exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	LBRACE	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17

	exp	goto 76
	lvalue	goto 15
	vallessexp	goto 14
	seqs	goto 13
	literals	goto 12
	negation	goto 11
	funcall	goto 10
	arthcomp	goto 9
	logicops	goto 8
	looping	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	grp	goto 1

	.	error


state 53:

	funcall : ID LPAREN . args RPAREN 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	LBRACE	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17

	exp	goto 78
	lvalue	goto 15
	vallessexp	goto 14
	seqs	goto 13
	literals	goto 12
	negation	goto 11
	funcall	goto 10
	arthcomp	goto 9
	logicops	goto 8
	looping	goto 7
	args	goto 77
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	grp	goto 1

	.	error

error:  state 54: shift/reduce conflict (shift OR, reduce by rule 36)
error:  state 54: shift/reduce conflict (shift AND, reduce by rule 36)
error:  state 54: shift/reduce conflict (shift DIVIDE, reduce by rule 36)
error:  state 54: shift/reduce conflict (shift TIMES, reduce by rule 36)
error:  state 54: shift/reduce conflict (shift MINUS, reduce by rule 36)
error:  state 54: shift/reduce conflict (shift PLUS, reduce by rule 36)

state 54:

	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 
	assign : lvalue ASSIGN exp .  (reduce by rule 36)

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	AND	shift 31
	OR	shift 30


	.	reduce by rule 36


state 55:

	lvalue : lvalue DOT ID .  (reduce by rule 64)



	.	reduce by rule 64


state 56:

	lvalue : lvalue LBRACK exp . RBRACK 
	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 

	RBRACK	shift 79
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	AND	shift 31
	OR	shift 30


	.	error

error:  state 57: shift/reduce conflict (shift OR, reduce by rule 31)
error:  state 57: shift/reduce conflict (shift AND, reduce by rule 31)
error:  state 57: shift/reduce conflict (shift DIVIDE, reduce by rule 31)
error:  state 57: shift/reduce conflict (shift TIMES, reduce by rule 31)
error:  state 57: shift/reduce conflict (shift MINUS, reduce by rule 31)
error:  state 57: shift/reduce conflict (shift PLUS, reduce by rule 31)

state 57:

	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 
	logicops : exp OR exp .  (reduce by rule 31)

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	AND	shift 31
	OR	shift 30


	.	reduce by rule 31

error:  state 58: shift/reduce conflict (shift OR, reduce by rule 30)
error:  state 58: shift/reduce conflict (shift AND, reduce by rule 30)
error:  state 58: shift/reduce conflict (shift DIVIDE, reduce by rule 30)
error:  state 58: shift/reduce conflict (shift TIMES, reduce by rule 30)
error:  state 58: shift/reduce conflict (shift MINUS, reduce by rule 30)
error:  state 58: shift/reduce conflict (shift PLUS, reduce by rule 30)

state 58:

	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp AND exp .  (reduce by rule 30)
	logicops : exp . OR exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	AND	shift 31
	OR	shift 30


	.	reduce by rule 30

error:  state 59: shift/reduce conflict (shift OR, reduce by rule 29)
error:  state 59: shift/reduce conflict (shift AND, reduce by rule 29)

state 59:

	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	arthcomp : exp DIVIDE exp .  (reduce by rule 29)
	logicops : exp . AND exp 
	logicops : exp . OR exp 

	AND	shift 31
	OR	shift 30


	.	reduce by rule 29

error:  state 60: shift/reduce conflict (shift OR, reduce by rule 28)
error:  state 60: shift/reduce conflict (shift AND, reduce by rule 28)

state 60:

	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp TIMES exp .  (reduce by rule 28)
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 

	AND	shift 31
	OR	shift 30


	.	reduce by rule 28

error:  state 61: shift/reduce conflict (shift OR, reduce by rule 27)
error:  state 61: shift/reduce conflict (shift AND, reduce by rule 27)

state 61:

	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp MINUS exp .  (reduce by rule 27)
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 

	TIMES	shift 33
	DIVIDE	shift 32
	AND	shift 31
	OR	shift 30


	.	reduce by rule 27

error:  state 62: shift/reduce conflict (shift OR, reduce by rule 26)
error:  state 62: shift/reduce conflict (shift AND, reduce by rule 26)

state 62:

	arthcomp : exp . PLUS exp 
	arthcomp : exp PLUS exp .  (reduce by rule 26)
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 

	TIMES	shift 33
	DIVIDE	shift 32
	AND	shift 31
	OR	shift 30


	.	reduce by rule 26


state 63:

	decs : dec decs .  (reduce by rule 46)



	.	reduce by rule 46


state 64:

	letexp : LET decs IN . expseqs END 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	LBRACE	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17

	exp	goto 81
	lvalue	goto 15
	vallessexp	goto 14
	seqs	goto 13
	expseqs	goto 80
	literals	goto 12
	negation	goto 11
	funcall	goto 10
	arthcomp	goto 9
	logicops	goto 8
	looping	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	grp	goto 1

	.	reduce by rule 19


state 65:

	tydec : TYPE ID . EQ ty 

	EQ	shift 82


	.	error


state 66:

	vardec : VAR ID . ASSIGN exp 
	vardec : VAR ID . COLON ID ASSIGN exp 

	COLON	shift 84
	ASSIGN	shift 83


	.	error


state 67:

	fundec : FUNCTION ID . LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp 

	LPAREN	shift 85


	.	error


state 68:

	looping : FOR ID ASSIGN . exp TO exp DO loopexp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	LBRACE	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17

	exp	goto 86
	lvalue	goto 15
	vallessexp	goto 14
	seqs	goto 13
	literals	goto 12
	negation	goto 11
	funcall	goto 10
	arthcomp	goto 9
	logicops	goto 8
	looping	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	grp	goto 1

	.	error


state 69:

	looping : WHILE exp DO . loopexp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	LBRACE	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 89

	exp	goto 88
	lvalue	goto 15
	vallessexp	goto 14
	seqs	goto 13
	literals	goto 12
	negation	goto 11
	funcall	goto 10
	arthcomp	goto 9
	logicops	goto 8
	looping	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	loopexp	goto 87
	letexp	goto 2
	grp	goto 1

	.	error


state 70:

	ifthen : IF exp THEN . exp ELSE exp 
	ifthen : IF exp THEN . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	LBRACE	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17

	exp	goto 90
	lvalue	goto 15
	vallessexp	goto 14
	seqs	goto 13
	literals	goto 12
	negation	goto 11
	funcall	goto 10
	arthcomp	goto 9
	logicops	goto 8
	looping	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	grp	goto 1

	.	error


state 71:

	recordcreate : LBRACE recassign RBRACE .  (reduce by rule 32)



	.	reduce by rule 32


state 72:

	recassign : ID EQ . exp 
	recassign : ID EQ . exp COMMA recassign 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	LBRACE	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17

	exp	goto 91
	lvalue	goto 15
	vallessexp	goto 14
	seqs	goto 13
	literals	goto 12
	negation	goto 11
	funcall	goto 10
	arthcomp	goto 9
	logicops	goto 8
	looping	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	grp	goto 1

	.	error


state 73:

	seqs : LPAREN expseqs RPAREN .  (reduce by rule 16)



	.	reduce by rule 16


state 74:

	grp : LPAREN exp RPAREN .  (reduce by rule 45)



	.	reduce by rule 45


state 75:

	expseqs : exp SEMICOLON . expseqs 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	LBRACE	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17

	exp	goto 81
	lvalue	goto 15
	vallessexp	goto 14
	seqs	goto 13
	expseqs	goto 92
	literals	goto 12
	negation	goto 11
	funcall	goto 10
	arthcomp	goto 9
	logicops	goto 8
	looping	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	grp	goto 1

	.	reduce by rule 19


state 76:

	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 
	arraycreate : ID LBRACK exp . RBRACK OF exp 

	RBRACK	shift 93
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	AND	shift 31
	OR	shift 30


	.	error


state 77:

	funcall : ID LPAREN args . RPAREN 

	RPAREN	shift 94


	.	error


state 78:

	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 
	args : exp .  (reduce by rule 24)
	args : exp . COMMA args 

	COMMA	shift 95
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	AND	shift 31
	OR	shift 30


	.	reduce by rule 24


state 79:

	lvalue : lvalue LBRACK exp RBRACK .  (reduce by rule 63)



	.	reduce by rule 63


state 80:

	letexp : LET decs IN expseqs . END 

	END	shift 96


	.	error


state 81:

	expseqs : exp .  (reduce by rule 17)
	expseqs : exp . SEMICOLON expseqs 
	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 

	SEMICOLON	shift 75
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	AND	shift 31
	OR	shift 30


	.	reduce by rule 17


state 82:

	tydec : TYPE ID EQ . ty 

	ID	shift 100
	LBRACE	shift 99
	ARRAY	shift 98

	ty	goto 97

	.	error


state 83:

	vardec : VAR ID ASSIGN . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	LBRACE	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17

	exp	goto 101
	lvalue	goto 15
	vallessexp	goto 14
	seqs	goto 13
	literals	goto 12
	negation	goto 11
	funcall	goto 10
	arthcomp	goto 9
	logicops	goto 8
	looping	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	grp	goto 1

	.	error


state 84:

	vardec : VAR ID COLON . ID ASSIGN exp 

	ID	shift 102


	.	error


state 85:

	fundec : FUNCTION ID LPAREN . tyfields RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp 

	ID	shift 104

	tyfields	goto 103

	.	reduce by rule 55


state 86:

	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 
	looping : FOR ID ASSIGN exp . TO exp DO loopexp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	AND	shift 31
	OR	shift 30
	TO	shift 105


	.	error


state 87:

	looping : WHILE exp DO loopexp .  (reduce by rule 39)



	.	reduce by rule 39

error:  state 88: shift/reduce conflict (shift BREAK, reduce by rule 41)
error:  state 88: shift/reduce conflict (shift LET, reduce by rule 41)
error:  state 88: shift/reduce conflict (shift FOR, reduce by rule 41)
error:  state 88: shift/reduce conflict (shift WHILE, reduce by rule 41)
error:  state 88: shift/reduce conflict (shift IF, reduce by rule 41)
error:  state 88: shift/reduce conflict (shift OR, reduce by rule 41)
error:  state 88: shift/reduce conflict (shift AND, reduce by rule 41)
error:  state 88: shift/reduce conflict (shift DIVIDE, reduce by rule 41)
error:  state 88: shift/reduce conflict (shift TIMES, reduce by rule 41)
error:  state 88: shift/reduce conflict (shift MINUS, reduce by rule 41)
error:  state 88: shift/reduce conflict (shift PLUS, reduce by rule 41)
error:  state 88: shift/reduce conflict (shift LBRACE, reduce by rule 41)
error:  state 88: shift/reduce conflict (shift LPAREN, reduce by rule 41)
error:  state 88: shift/reduce conflict (shift STRING, reduce by rule 41)
error:  state 88: shift/reduce conflict (shift INT, reduce by rule 41)
error:  state 88: shift/reduce conflict (shift ID, reduce by rule 41)

state 88:

	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 
	loopexp : exp .  (reduce by rule 41)
	loopexp : exp . loopexp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	LBRACE	shift 22
	PLUS	shift 35
	MINUS	shift 107
	TIMES	shift 33
	DIVIDE	shift 32
	AND	shift 31
	OR	shift 30
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 89

	exp	goto 88
	lvalue	goto 15
	vallessexp	goto 14
	seqs	goto 13
	literals	goto 12
	negation	goto 11
	funcall	goto 10
	arthcomp	goto 9
	logicops	goto 8
	looping	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	loopexp	goto 106
	letexp	goto 2
	grp	goto 1

	.	reduce by rule 41


state 89:

	loopexp : BREAK .  (reduce by rule 43)



	.	reduce by rule 43

error:  state 90: shift/reduce conflict (shift ELSE, reduce by rule 38)
error:  state 90: shift/reduce conflict (shift OR, reduce by rule 38)
error:  state 90: shift/reduce conflict (shift AND, reduce by rule 38)
error:  state 90: shift/reduce conflict (shift DIVIDE, reduce by rule 38)
error:  state 90: shift/reduce conflict (shift TIMES, reduce by rule 38)
error:  state 90: shift/reduce conflict (shift MINUS, reduce by rule 38)
error:  state 90: shift/reduce conflict (shift PLUS, reduce by rule 38)

state 90:

	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 
	ifthen : IF exp THEN exp . ELSE exp 
	ifthen : IF exp THEN exp .  (reduce by rule 38)

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	AND	shift 31
	OR	shift 30
	ELSE	shift 108


	.	reduce by rule 38


state 91:

	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 
	recassign : ID EQ exp .  (reduce by rule 33)
	recassign : ID EQ exp . COMMA recassign 

	COMMA	shift 109
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	AND	shift 31
	OR	shift 30


	.	reduce by rule 33


state 92:

	expseqs : exp SEMICOLON expseqs .  (reduce by rule 18)



	.	reduce by rule 18


state 93:

	arraycreate : ID LBRACK exp RBRACK . OF exp 

	OF	shift 110


	.	error


state 94:

	funcall : ID LPAREN args RPAREN .  (reduce by rule 23)



	.	reduce by rule 23


state 95:

	args : exp COMMA . args 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	LBRACE	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17

	exp	goto 78
	lvalue	goto 15
	vallessexp	goto 14
	seqs	goto 13
	literals	goto 12
	negation	goto 11
	funcall	goto 10
	arthcomp	goto 9
	logicops	goto 8
	looping	goto 7
	args	goto 111
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	grp	goto 1

	.	error


state 96:

	letexp : LET decs IN expseqs END .  (reduce by rule 44)



	.	reduce by rule 44


state 97:

	tydec : TYPE ID EQ ty .  (reduce by rule 51)



	.	reduce by rule 51


state 98:

	ty : ARRAY . OF ID 

	OF	shift 112


	.	error


state 99:

	ty : LBRACE . tyfields RBRACE 

	ID	shift 104

	tyfields	goto 113

	.	reduce by rule 55


state 100:

	ty : ID .  (reduce by rule 52)



	.	reduce by rule 52


state 101:

	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 
	vardec : VAR ID ASSIGN exp .  (reduce by rule 58)

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	AND	shift 31
	OR	shift 30


	.	reduce by rule 58


state 102:

	vardec : VAR ID COLON ID . ASSIGN exp 

	ASSIGN	shift 114


	.	error


state 103:

	fundec : FUNCTION ID LPAREN tyfields . RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp 

	RPAREN	shift 115


	.	error


state 104:

	tyfields : ID . COLON ID 
	tyfields : ID . COLON ID COMMA tyfields 

	COLON	shift 116


	.	error


state 105:

	looping : FOR ID ASSIGN exp TO . exp DO loopexp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	LBRACE	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17

	exp	goto 117
	lvalue	goto 15
	vallessexp	goto 14
	seqs	goto 13
	literals	goto 12
	negation	goto 11
	funcall	goto 10
	arthcomp	goto 9
	logicops	goto 8
	looping	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	grp	goto 1

	.	error


state 106:

	loopexp : exp loopexp .  (reduce by rule 42)



	.	reduce by rule 42


state 107:

	literals : MINUS . INT 
	arthcomp : exp MINUS . exp 

	ID	shift 26
	INT	shift 118
	STRING	shift 24
	LPAREN	shift 23
	LBRACE	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17

	exp	goto 61
	lvalue	goto 15
	vallessexp	goto 14
	seqs	goto 13
	literals	goto 12
	negation	goto 11
	funcall	goto 10
	arthcomp	goto 9
	logicops	goto 8
	looping	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	grp	goto 1

	.	error


state 108:

	ifthen : IF exp THEN exp ELSE . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	LBRACE	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17

	exp	goto 119
	lvalue	goto 15
	vallessexp	goto 14
	seqs	goto 13
	literals	goto 12
	negation	goto 11
	funcall	goto 10
	arthcomp	goto 9
	logicops	goto 8
	looping	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	grp	goto 1

	.	error


state 109:

	recassign : ID EQ exp COMMA . recassign 

	ID	shift 49

	recassign	goto 120

	.	error


state 110:

	arraycreate : ID LBRACK exp RBRACK OF . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	LBRACE	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17

	exp	goto 121
	lvalue	goto 15
	vallessexp	goto 14
	seqs	goto 13
	literals	goto 12
	negation	goto 11
	funcall	goto 10
	arthcomp	goto 9
	logicops	goto 8
	looping	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	grp	goto 1

	.	error


state 111:

	args : exp COMMA args .  (reduce by rule 25)



	.	reduce by rule 25


state 112:

	ty : ARRAY OF . ID 

	ID	shift 122


	.	error


state 113:

	ty : LBRACE tyfields . RBRACE 

	RBRACE	shift 123


	.	error


state 114:

	vardec : VAR ID COLON ID ASSIGN . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	LBRACE	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17

	exp	goto 124
	lvalue	goto 15
	vallessexp	goto 14
	seqs	goto 13
	literals	goto 12
	negation	goto 11
	funcall	goto 10
	arthcomp	goto 9
	logicops	goto 8
	looping	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	grp	goto 1

	.	error


state 115:

	fundec : FUNCTION ID LPAREN tyfields RPAREN . EQ exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp 

	COLON	shift 126
	EQ	shift 125


	.	error


state 116:

	tyfields : ID COLON . ID 
	tyfields : ID COLON . ID COMMA tyfields 

	ID	shift 127


	.	error


state 117:

	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 
	looping : FOR ID ASSIGN exp TO exp . DO loopexp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	AND	shift 31
	OR	shift 30
	DO	shift 128


	.	error

error:  state 118: reduce/reduce conflict between rule 22 and rule 20 on TYPE
error:  state 118: reduce/reduce conflict between rule 22 and rule 20 on VAR
error:  state 118: reduce/reduce conflict between rule 22 and rule 20 on FUNCTION
error:  state 118: reduce/reduce conflict between rule 22 and rule 20 on BREAK
error:  state 118: reduce/reduce conflict between rule 22 and rule 20 on END
error:  state 118: reduce/reduce conflict between rule 22 and rule 20 on IN
error:  state 118: reduce/reduce conflict between rule 22 and rule 20 on LET
error:  state 118: reduce/reduce conflict between rule 22 and rule 20 on DO
error:  state 118: reduce/reduce conflict between rule 22 and rule 20 on TO
error:  state 118: reduce/reduce conflict between rule 22 and rule 20 on FOR
error:  state 118: reduce/reduce conflict between rule 22 and rule 20 on WHILE
error:  state 118: reduce/reduce conflict between rule 22 and rule 20 on ELSE
error:  state 118: reduce/reduce conflict between rule 22 and rule 20 on THEN
error:  state 118: reduce/reduce conflict between rule 22 and rule 20 on IF
error:  state 118: reduce/reduce conflict between rule 22 and rule 20 on OR
error:  state 118: reduce/reduce conflict between rule 22 and rule 20 on AND
error:  state 118: reduce/reduce conflict between rule 22 and rule 20 on DIVIDE
error:  state 118: reduce/reduce conflict between rule 22 and rule 20 on TIMES
error:  state 118: reduce/reduce conflict between rule 22 and rule 20 on MINUS
error:  state 118: reduce/reduce conflict between rule 22 and rule 20 on PLUS
error:  state 118: reduce/reduce conflict between rule 22 and rule 20 on RBRACE
error:  state 118: reduce/reduce conflict between rule 22 and rule 20 on LBRACE
error:  state 118: reduce/reduce conflict between rule 22 and rule 20 on RBRACK
error:  state 118: reduce/reduce conflict between rule 22 and rule 20 on RPAREN
error:  state 118: reduce/reduce conflict between rule 22 and rule 20 on LPAREN
error:  state 118: reduce/reduce conflict between rule 22 and rule 20 on SEMICOLON
error:  state 118: reduce/reduce conflict between rule 22 and rule 20 on COMMA
error:  state 118: reduce/reduce conflict between rule 22 and rule 20 on STRING
error:  state 118: reduce/reduce conflict between rule 22 and rule 20 on INT
error:  state 118: reduce/reduce conflict between rule 22 and rule 20 on ID
error:  state 118: reduce/reduce conflict between rule 22 and rule 20 on EOF

state 118:

	literals : INT .  (reduce by rule 20)
	literals : MINUS INT .  (reduce by rule 22)

	EOF	reduce by rule 20
	ID	reduce by rule 20
	INT	reduce by rule 20
	STRING	reduce by rule 20
	COMMA	reduce by rule 20
	SEMICOLON	reduce by rule 20
	LPAREN	reduce by rule 20
	RPAREN	reduce by rule 20
	RBRACK	reduce by rule 20
	LBRACE	reduce by rule 20
	RBRACE	reduce by rule 20
	PLUS	reduce by rule 20
	MINUS	reduce by rule 20
	TIMES	reduce by rule 20
	DIVIDE	reduce by rule 20
	AND	reduce by rule 20
	OR	reduce by rule 20
	IF	reduce by rule 20
	THEN	reduce by rule 20
	ELSE	reduce by rule 20
	WHILE	reduce by rule 20
	FOR	reduce by rule 20
	TO	reduce by rule 20
	DO	reduce by rule 20
	LET	reduce by rule 20
	IN	reduce by rule 20
	END	reduce by rule 20
	BREAK	reduce by rule 20
	FUNCTION	reduce by rule 20
	VAR	reduce by rule 20
	TYPE	reduce by rule 20


	.	error

error:  state 119: shift/reduce conflict (shift OR, reduce by rule 37)
error:  state 119: shift/reduce conflict (shift AND, reduce by rule 37)
error:  state 119: shift/reduce conflict (shift DIVIDE, reduce by rule 37)
error:  state 119: shift/reduce conflict (shift TIMES, reduce by rule 37)
error:  state 119: shift/reduce conflict (shift MINUS, reduce by rule 37)
error:  state 119: shift/reduce conflict (shift PLUS, reduce by rule 37)

state 119:

	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 
	ifthen : IF exp THEN exp ELSE exp .  (reduce by rule 37)

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	AND	shift 31
	OR	shift 30


	.	reduce by rule 37


state 120:

	recassign : ID EQ exp COMMA recassign .  (reduce by rule 34)



	.	reduce by rule 34

error:  state 121: shift/reduce conflict (shift OR, reduce by rule 35)
error:  state 121: shift/reduce conflict (shift AND, reduce by rule 35)
error:  state 121: shift/reduce conflict (shift DIVIDE, reduce by rule 35)
error:  state 121: shift/reduce conflict (shift TIMES, reduce by rule 35)
error:  state 121: shift/reduce conflict (shift MINUS, reduce by rule 35)
error:  state 121: shift/reduce conflict (shift PLUS, reduce by rule 35)

state 121:

	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 
	arraycreate : ID LBRACK exp RBRACK OF exp .  (reduce by rule 35)

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	AND	shift 31
	OR	shift 30


	.	reduce by rule 35


state 122:

	ty : ARRAY OF ID .  (reduce by rule 54)



	.	reduce by rule 54


state 123:

	ty : LBRACE tyfields RBRACE .  (reduce by rule 53)



	.	reduce by rule 53


state 124:

	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 
	vardec : VAR ID COLON ID ASSIGN exp .  (reduce by rule 59)

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	AND	shift 31
	OR	shift 30


	.	reduce by rule 59


state 125:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	LBRACE	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17

	exp	goto 129
	lvalue	goto 15
	vallessexp	goto 14
	seqs	goto 13
	literals	goto 12
	negation	goto 11
	funcall	goto 10
	arthcomp	goto 9
	logicops	goto 8
	looping	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	grp	goto 1

	.	error


state 126:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp 

	ID	shift 130


	.	error


state 127:

	tyfields : ID COLON ID .  (reduce by rule 56)
	tyfields : ID COLON ID . COMMA tyfields 

	COMMA	shift 131


	.	reduce by rule 56


state 128:

	looping : FOR ID ASSIGN exp TO exp DO . loopexp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	LBRACE	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 89

	exp	goto 88
	lvalue	goto 15
	vallessexp	goto 14
	seqs	goto 13
	literals	goto 12
	negation	goto 11
	funcall	goto 10
	arthcomp	goto 9
	logicops	goto 8
	looping	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	loopexp	goto 132
	letexp	goto 2
	grp	goto 1

	.	error


state 129:

	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ exp .  (reduce by rule 60)

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	AND	shift 31
	OR	shift 30


	.	reduce by rule 60


state 130:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp 

	EQ	shift 133


	.	error


state 131:

	tyfields : ID COLON ID COMMA . tyfields 

	ID	shift 104

	tyfields	goto 134

	.	reduce by rule 55


state 132:

	looping : FOR ID ASSIGN exp TO exp DO loopexp .  (reduce by rule 40)



	.	reduce by rule 40


state 133:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp 

	ID	shift 26
	INT	shift 25
	STRING	shift 24
	LPAREN	shift 23
	LBRACE	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17

	exp	goto 135
	lvalue	goto 15
	vallessexp	goto 14
	seqs	goto 13
	literals	goto 12
	negation	goto 11
	funcall	goto 10
	arthcomp	goto 9
	logicops	goto 8
	looping	goto 7
	recordcreate	goto 6
	arraycreate	goto 5
	assign	goto 4
	ifthen	goto 3
	letexp	goto 2
	grp	goto 1

	.	error


state 134:

	tyfields : ID COLON ID COMMA tyfields .  (reduce by rule 57)



	.	reduce by rule 57


state 135:

	arthcomp : exp . PLUS exp 
	arthcomp : exp . MINUS exp 
	arthcomp : exp . TIMES exp 
	arthcomp : exp . DIVIDE exp 
	logicops : exp . AND exp 
	logicops : exp . OR exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .  (reduce by rule 61)

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	AND	shift 31
	OR	shift 30


	.	reduce by rule 61


state 136:


	EOF	accept


	.	error

283 of 687 action table entries left after compaction
521 goto table entries
